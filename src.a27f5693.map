{"version":3,"sources":["src/entity.js","src/util.js","src/physicsEntity.js","node_modules/tinycolor2/tinycolor.js","src/splatterEntity.js","src/particleEntity.js","src/scoreParticleEntity.js","src/corpseEntity.js","src/botBrain.js","src/input.js","src/playerEntity.js","src/birthEntity.js","src/togglingPlayers.js","src/main.js","src/canvas.js","src/index.js"],"names":["Entity","_x","_y","_w","_h","colour","_col","label","_lab","x","y","w","h","remove","depth","entities","ctx","fillStyle","fillRect","module","exports","rectangleObjectsOverlap","ax","ay","aw","ah","bx","by","bw","bh","rectanglesOverlap","lerp","a","b","t","least","acc","val","f","most","require","wouldCollide","me","them","xd","yd","willCollide","some","e","PhysicsEntity","_opts","gravity","_grav","kinematic","_kin","ethereal","_ether","dontCollide","_dc","vx","vy","dx","dy","colliders","filter","entity","Math","sign","tc","SplatterEntity","args","alpha","time","fadeTime","radius","globalCompositeOperation","c","setAlpha","toRgbString","beginPath","arc","PI","fill","force","clamp","min","max","ParticleEntity","_r","opts","random","abs","addEntity","obstacles","willIntersect","window","size","squishAmount","theta","atan2","ellipse","ScoreParticleEntity","number","_num","range","_rng","fade","ease","globalAlpha","font","fillText","interp","pow","CorpseEntity","botBrain","players","closestPlayer","reduce","sqrt","p","hInp","jInp","dInp","bouncy","onGround","dirToClosest","find","isStupid","dirToCenter","orientationInputRamp","s","setup","keys","orientationInput","touches","onkeydown","repeat","key","onkeyup","preventDefault","ontouchstart","targetTouches","touch","side","clientX","innerWidth","ontouchend","changedTouches","ondeviceorientation","beta","gamma","z","isDown","inputs","name","input","checks","Array","isArray","map","i","type","r","o","index","isPressed","left","right","jump","slam","particleNum","PlayerEntity","_inps","speed","_hspd","jumpHeight","_jmph","slamHeight","_slmh","verticalFriction","_vfric","horizontalFriction","_hfric","_spwnp","spawnPlayer","_n","kills","_klls","isBot","_isbt","hSpd","jmpHght","slmHght","hFric","vFric","jumps","jumpsMax","isPlayer","stretch","squeeze","doDie","timeSinceLastInput","becomeBotTimeout","delayRespawn","getColour","particle","length","bind","getInput","die","gripTime","gripTimeMax","player","willIntersectWith","lighten","BirthEntity","spawn","dontProgressTime","forEach","initTogglingPlayers","document","querySelectorAll","el","addEventListener","cl","classList","enabled","includes","join","console","log","spawners","spawner","warn","playerColours","playerSpawns","n","round","dist","distToNearestPlayer","playerOpts","push","byDepth","main","sort","ent","update","draw","create","width","height","canvas","createElement","body","appendChild","context","getContext","backgroundColour","loop","requestAnimationFrame"],"mappings":";;;ACAA,IAAMqB,0BAA0B,SAA1BA,uBAA0B;AAAA,MAAKC,EAAL,QAAEb,CAAF;AAAA,IDA1BT,ECAsCuB,EAAZ,QAASb,CAAT;ADC9B,ACD8B,MAAmBc,EAAnB,QAAgBb,CAAhB,CDCjBV,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAAoF;AGDtF,AHCsF,ACDtD,MAA0BqB,EAA1B,QAAuBb,CAAvB,kEDCkD,EAAI;AGAtF,AHAsF,ACDtD,MAAmCc,EAAnC,SAAgCjB,CAAhC,SDCCJ,MAAqD;AGCtF,AHDsF,ACDtD,MAA0CsB,EDCjCrB,ACDT,IDCsD,KCDfI,CAAvC,yBDCgB,OAAsC;AGEtF,AHFsF,ACDtD,MAAiDkB,EAAjD,SAA8CjB,CAA9C,QDCyBJ,KAA6B;AGGtF,AHHsF,ACDtD,MAAwDsB,EDCxBrB,ACDhC,IDCsD,KCDDI,CAArD,wBDCuC,MAAe;AGItF,AFLgC,SAC9BkB,kBAAkBR,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,CAD8B;AEMhC,AHLsF,AEDtF,ADAgC,CAAhC,GCAM7B,SAASwC,QAAQ,UAAR,CAAf;ACOA;AACA,AHNI,ACCJ,IAAMV,KDDGrB,CAAL,GAASR,EAAT,AED0BuC,QAAQ,CDEZ,OCFI,EDExBV,iBAAoB,CAACR,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B;AEM1B,AHNI,ACAsB,ICFlBC,KFECpB,ACCNY,CDDC,GAASpB,EAAT,ACCMwB,KAAKE,EAAZ,IACAF,MAAOJ,CCJFQ,IDION,EADZ,IAEAD,MAAOI,KAAKE,EAFZ,IAGAF,MAAOJ,KAAKE,EAJW;AEO1B,AHNI,ACDsB,CAA1B,QDCSd,CAAL,GAASR,EAAT;AGOJ,AHNI,AEFJ,IAAMsC,KFEG7B,CAAL,GAASR,EAAT,IEFiB,SAAfqC,YAAe,CAACC,EAAD,EAAKC,IAAL,EAAWC,EAAX,EAAeC,EAAf,EAAsB;ACS3C,AHNI,AEHuC,ADM3C,IAAMd,ECLIT,EADiC,CFGlCjB,EEF4BqC,ADKxB,ECN8B,CACpCjC,CFEH,AEHuC,GFGzBH,ECGZyB,EDHF,ECGS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AEIb,AHNI,AEJuC,ADM9B,MCLIX,EAD0B,CFIlChB,ACGPyB,ECNmCU,EADM,ADOpC,CDHH,AEHUhC,ADMNuB,CCPmC,EFI1BzB,CCGLwB,CAAL,EDHH,ECGaE,CADJ;AEKb,AHNI,AELuC,ADM9B,CAAb,KCLwBV,EADmB,CFKlCX,EEJ4B6B,EADM,CACtB/B,CFIjB,AELuC,GFKzB,KAAd;AGOJ,AHNI,AENuC,MACZc,EADY,CFMlCX,EEL4B4B,EADM,CFMvC,AELwB9B,CADe,EFM1B,CAAb;AGOJ,AHNG,AEPwC,ADS3C,IAAMuB,ECPIT,EAFiC,GAENiB,CDOvB,GCT6B,CAEpClC,CAFoC,IDSrC0B,KAAQ;AEKd,ADd2C,ADS7B,MCPGR,EAF0B,CDSxB,ECPkBgB,IAFM,CAE7BjC,CAF6B,EDSvB0B,GAAD,EAAMC,GAAN;AEMnB,ADf2C,ADSxB,MCPKT,EAFmB,GAENe,ADOJL,EAAED,ECTQ,CAEtB1B,ADOY,CCTU,GDSD2B,EAAEF,GAAF,CAAT,GAAkBC,GAAlB,GAAwBD,GAAtC;AEOnB,ADhB2C,ADSxB,GAAL,GCPiBP,EAFY,GAENc,IAFM,CAEf/B,CAFe;ACiB3C,AFRc,CAAd,0BDAUG,UAAU,CAAE;AGStB,ADfE,ADOF,IAAMwB,KCPGT,EDOI,SAAPS,IAAO,GCPcjB,KAAKsB,EAAvB,EAA2BrB,KAAKsB,EAAhC,EAAoCrB,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDC,EAAxD,CAAP;ACgBF,ADfC,ADMY,CCVb,QDUkB,UAACO,GAAD,EAAMC,GAAN;AEUlB,AFVkB,WAAcC,EAAED,GAAF,IAASC,EAAEF,GDCnCpB,ACDiC,CAAT,GAAkBqB,CDCrC,ECDmB,GAAwBD,GAAtC;AEWlB,AHTIpB,AENJ,ADIkB,GAAL,CCJP8B,MFME7B,QENY,CFMhB,GAAgB,KAAKZ,AENnByC,MFM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AU1D,CAAV,CAAd,GAA6ByH,CADzB;AAAA,AJC7B,CIDA,GJCM7D,ADEAA,iBCFiB7B,QAAQ,kBAAR,CAAvB;AGEE,AHDF,IAAM2C,ACAAkB,EECEe,MHDM,EAAd,QGCwBD,QAAQE,MAAR,CAAelF,MAAM;AAAA,ACA7C,IAAMgG,ODA4CjE,CCApC,IDAyCoD,IAAL,CAAU,ACAtDa,KAAQ,IDA+CZ,ACA1C,EDA4C9G,CAAF,GAAM,MAAKA,CAAZ,EAAkB,CAAlB,aAAuB8G,EAAE7G,CAAF,GAAM,MAAKA,CAAlC,EAAwC,CAAxC,CAAV,CAAL;AAAA,ADH7C,AEIE,AJAF,ADAE,GIDqC,CAAf,ADHlBV,AFIAoF,CGDJ,OHCY,CEJC5C,QAAQ,AFIjB4C,KAAQ,CAAC3E,CAAD,ADAU,ECAN4E,CEJH,CAAf,CFIc,EAASC,GAAT;AEHd,AEIES,AJDY,ACDZ,AFCsB,IGHlB3B,KAAK5B,AEIF4F,AJDsBlE,IIC7B,CJDkCoB,EICpB,CFJG,AFGY,CIC7B,AJDsCD,GAAT,EAAcnB,KAAKmB,CEHvC,CAAX,CFG6C,CAAS5E,CAAT,ACDrB,EDCiC6E,GAAZ,CAAd,CAAjB;AGCZ,ACCAS,AJFY,ACDU,AMHxB,CPIA,GOJM4H,EJKAnG,GCCGa,IDDI,CAAX,WCCA,CGN0B,EHMA,EAA1B,KGNIsF,mBAAsB,GAAM;AJMhC,ACCA5H,ALHsB,AQHtB,MJKI0B,GCCGa,IDDI,CAAX,CDJe9F,CEKf,GAAiB,EAAjB,EFLuB,QAAR;ACKf,AMPF,ALQEuD,AHLsB,AMDtB,IEFIyJ,APEEzN,AFIFwD,EGCAmC,AILAP,GHMGoB,IDDI,AMPE,CNOb,EILcqF,EHMd,EFNM7L,CEMa,CKRfyN,GFEmB3B,GEFV,CAAC4B,ELQMzM,CAAD,EKRN,ALQa,EKRL0M,KFEP,CEFD,AFE2B,EEFR,OFElB,CAAd;AEDA,ALQE,ALLoB,AQDtBvI,MEFMwI,ELQA3M,EAAEwF,AGNAkF,KEFOE,CLQb,CGNF,CHMgB,AGNA,MEFQgC,IFEP9B,EAAD,EAAK9D,CAAL,IEFD,CAAuB,AVGtB1F,IAAM,IUHP,CAAf;ANQA,AMPAqL,APEF,AQJA,ANUM5J,ACVN,AJGwB,AFCNzB,AQDA,ILCZyC,AQJAf,ALAA/C,KIEGwM,CVEe,CWJX,AHGgB3B,CGHf,CRIC,AEMF1F,CKRX,AFC8B2F,EGHnB,CDEI0B,ALQX,CMVc,ANUFzM,EAAEyF,ACVEjG,CKAT,CDEX,APEIuE,AQJN,CNUM,IAAqB,CFNZ,AEMT,ACVwB,EEGD,CAAoB,ONA/BzC,AMAW,EAA6B,ENAlC,GIHF,CAAtB,MEGgE;AJO9D,AMPAqL,APCa,AQHf,ANUK,AJJH,AKNF,AJEkBrL,AFCM,AQApB,IGHE6K,ALAA5J,CDQF,CDCE,CAACrB,EMPEwL,APCWxL,CDDI,AMCd8J,CGHGxL,ANUF,CDDCkD,EDNaJ,CODvB,EPCkB,CCMb,AMPWoK,APCW,CAAT,AQHC,ERGY,AGHVlN,EFSA,CMPrB,ETIavC,CGGR,ADNgCQ,AQH1B,CRGmB,AQHhC,AVME,CKN6B,CLMZP,CGGa,ADNYgE,CFG1C,EAAqBsB,EGGcmC,ADNYX,AFG/C,EAAoC,CEHM,CAAS,ECMrB,EINb8G,EJM4B5J,ADNYzD,CAAN,AGH9B,AEGDwN,CFHtB,EHG+D,CCMXvI,ADNR,EAAsB,CAAtB,CAAxB,CAAL,AKAL,CJMqC,CIN3C,IJM2D,GAAzD,MAAmE,KAAKkC,QAAL,IAAiB,KAAKhE,EAAL,GAAU,CAA9F,CAAJ,EAAsG;AGVxG,AHWI6D,AMPF1B,APAa,AQFf,ANUMA,AIZN,AROsC,AKLtC,AJCwB,AMEpB,CLDJ,GIJM/F,AIEA+P,AFFA9M,AHEAoD,ILKqBZ,CSHlBmI,CFCCM,CJMC,CAAP,AHJkC,CMPvB1L,AFYF4F,CMVG5F,GDEd,ALQI,CKRYqN,ALQA7M,EAAEyF,AIZEjG,ADKFwL,CDLG,CGIrB,ACFsB,CDED8B,ALQjB,AGPiB3B,GFHK3L,CDUD,CAArB,AIZwB,GFAf,ACKK,CDLpB,AIEgB,AHGgB,EED9B,ACFkCwD,ALAA,CIED2J,ICFM,CAAL,CDElC,ACFc,AHGI,CAAhB,CGHyC3J,EFFvB,CAAtB,EEEkD,CAAL,CAA7B,CAAhB,MLA4B,CAA5B,yBLKkC,EAAI;AMNtC,AHWG,AMPD,ACFFxD,ANUK,AIZL,AHEA,ANII,IONEmI,AEAAA,AHEA1D,EIEE8I,ECFA,QDEUJ,CCFlB,EJFqBnN,AIEF2F,AFFE3F,AHEAA,IIEIwN,CCFzB,GJF6B,AEAA,AHEA,MIEX,CAAkB,IAAlB,CAAhB,IHJmB,AEAA,AHEA,CCFrB,AEAA,AHEA;ACDA,AGIE,ACFF,ANUG,AIZH,ARKsC,AKHtC,AJDwB,AFCA,AQGpB,GHCF,CENI5L,AJIA6C,AQFFgJ,AFFE1C,AHEArG,KCFK1E,AGIFuN,MJFQvN,CIEf,CHJiB,CEACA,KEEG,ALAE,GGFG,GFAjB,AIEX,CJFA,KDEiB,CAAjB,KGFoB,CAApB,iHTGa8B,IADW,MECXA,IAFW;AEWtB,AMPD,ALQCyB,AIZF,AHEA,AJDI,AMIA,CERJ,GDGM4H,AHEAvJ,KDUGsE,ACVElG,CEGH0L,MHON,CCViB,AEGf,EHOe,AGPF,OCLW1L,GJYRQ,ACVT,CDUQ,ACVnB,EDU0B,EIZU,mBAAR,CAA5B;ALYE,AOTF+C,ANUIA,AJTkC,ADClC,AQCE+H,MJMA5J,COTC8B,GXEEzB,CIOEmB,AOTX,ANUW0C,AGPF6F,GGHKjI,CJHGxD,AFab,ALRA,CKQYQ,CDDV,COTN,ANUkByF,ALRD,CAAb,CQCE,CHOF,CDDkB,CGZG,ACMJ,EJMnB,ACCuB,CAArB,CDDuB,IGZV,qBCMQuF,GAAGhK,MAAH,CAAU,kEPDzB/D,EAD4B,EACxBC,EADwB,EACpB,CADoB,EACjB,CADiB,EACduF,IADc;AGSlC,AMPJtE,APFE,AEUE,ALRA,AQA+B,IDN3BY,GGMDX,CNOCgG,ACCApE,EAAEyF,ALRDjE,GKQD,CKRR,AVAI,CSLehC,AHEFA,EIGAgN,AVAD,AQAwB5K,CHQtB,ALRD,EONT7C,APMJ,CKQA,CDDkBrB,CAAd,AMPR,ALQuB,AIbI,AHEF,AEGqB,GJOpB,ADTF,KCSOA,AEVd,CFUb,AKZe,ADKgB,EJOD;AAC5B,ADVkB,AQCxB,ANUMsC,AJTF,ACHA,AFIA,AQD+B,IGD7BkN,AFJEzG,AHEA1H,IDYA4G,AHZAlD,CMGiB,CPAhBf,ADCAD,AQDY,CGDR,GHC6C,CNH3CH,CDGX,EDCA,CCDckB,CUDZ0K,ALFEnO,AJAY,CDGhB,ACHW,AFIK,CKQd,AIdE0H,APEJ,CFIA,CWFS,AHCQ,GAAiD2E,CGDpD,GHCG,CAAsD,GAAtD,CAAf;ADJN,AHaM,AOTJ2B,ANUG,AJTD,ADCA,AQDC,IDLChJ,GCGF,GJUMc,AOTA5G,AVCDwC,ADCA3C,GONM,ACKJ,ERCP,GAAa,CWFf,AXEgB,ECDd,CMLEiG,AIIgBkJ,AXElB,ECDmB,CGQE/L,GGbV,ANKX,EGQ0BC,IAAL,CAAUiD,GOTjC,WPS+C3G,CAAd,GAAkB,KAAKA,CAAjC,CAAnB;AGbS,AHcT+G,ADZkB,AQGtBuI,ANUC,AJTC,ACHA,AFIA,AQDEjC,GHIJ,MEVkB5J,CIKVhD,AVCDqC,ADCAmB,CQDAuJ,EJQI,CGdY3I,AHcXuC,EKdUrF,AHEMA,ANK1B,COPgB,CAAS,AIK3B,AVCE,CMNgB,AIKD,AXED,CWFhB,AHCI,CDN2B,ANMb,ADChB,CWFkB,CAApB,AHCmB,CCNW,AHEM,CKGbwD,AVCrB,CGQE,CGdiCvF,CAAP,EIKF,CJLcyD,AIKnB,CAAvB,AFLsB,CHEM,CKGI8B,EJLegB,GAAL,AIKL,CJLc,AIKnB,CAAhC,KJLyDvG,CAAN,GAAU,CAAnB,CCMnBuN,CDNyC,CAAtB,CAAxB,ACMQhK,CDNb,KCMU,CAAU;ADNpB,AHeV,AOTHmL,ANUApJ,AJTE,AOD+B,CDNnC,GEAQ5D,AHEAqH,CFSJ,EOLGuG,ENUEnH,CJTAjF,CGQE,CHRP,EUDF,CVCaO,EODyBU,GPCpBc,CISlB,CIhBMvD,CHEAqH,AEIsC,CHUtB,EJTT,KAAgBrE,EODI,CHUVnC,CAAD,CJTV,CISiB,EJTUmC,QAAQ,CAA7C;AGSE,ADdkB,AQKtBY,ANS6B,AJR3B,ACVoB,AFWpB,AQH+B,ICNpBxD,AHEC8H,KKKP8F,AHDgB,CPEhBvM,ADCAL,AQHY,EPEjB,EOFuD,CPE7C,CAACW,EDCX,GSTW3B,ARQKoD,ADCA,EEFZF,AMDa,CPEN,CAAUvB,ADCrB,CMPYmG,AEIsD+D,CNR9C,CAOlB9H,ESEJ,AVC4BZ,AOFT,CGCUwK,AHD4C,GNRnD,AMQH,CGCnB,AHDI,CPEmB,EENP5L,GFMuBa,CENjB,IFMA,GAA2BA,QAAQ,CAA5C,CAAX;AGSE,ADfYb,AQMjB,ANQ8B,AJP3B,ACXoB,AFCA,AQQnB,CGJL,GJDMiJ,ILGQhH,EEYJsB,ADfc,AFOf/G,ECXe,GDWpB,GAAa,CAAC,GAAd,IGQqBoD,KAAKC,IAAL,CAAUiD,QFZd,CAPG,KEmByB3G,CAAd,GAAkB,KAAKA,CAAjC,CAAnB;AACA+G,ADhBkB,AEcO,AIf/B,ARCsC,AKEtC,AJNwB,AFYrB,ISTCzG,AHGE2J,SFcO7C,EKjBE,EAAf,CHGoB,EAApB,EJGQpC,IEWF,AFpBkB,CAQlBe,KARkB;AEqBnB,AOTL0J,AFRAnK,ARQG,ACZqB,AMWpBsI,OCPGtN,CPIM0F,IARW,EMWZ6H,CCPZ,EDOI,CCPc,ADOFvI,ECPhB,EAAqB,GDOEhF,QAAP,CAAgBiD,MAAhB,CAAuB,ENHnB,EARI;AKKtB,AHiBC,ADdC,AEU2B,AGPQ,IFHjC2G,WEGsC3H,EAAEwK,KAAF,GDNpB,CCM+B,IAAX,IAAmBxK,EAAEyB,QAAF,IAAc,IAAtC;ADNf,AJDA,AEepB,AIbJ,APKI,AMAmC,ICLjCiK,GDKU,CAAZ,ENAKpI,MAAL,GAAcC,COLI,CAAC,EPKnB,IGQkBvD,EAAE6F,CIbF,EAAY,SAAZ,CJalB,CIbyC,SAAvB,EAAkC,SAAlC,CAAtB,uFNAavE,IAFW,aEee;ADKrC,ADnBE,AEcmC,AIZvC,APKI,IOLEqK,MPKGnI,EGOIsC,GHPT,EGOmC,CHPtBrC,COLI,CACnB,CAAC,CPIC,EOJF,EAAM,CTME1F,ESNR,CADmB,EAEnB,CAAC,GAAD,CTKkB,CSLZ,GAAN,CAFmB,EAGnB,CAAC,GAAD,EAAM,GAAN,CAHmB,EAInB,CAAC,GAAD,EAAM,GAAN,CAJmB,EAKnB,CAAC,GAAD,EAAM,EAAN,CALmB,EAMnB,CAAC,GAAD,EAAM,EAAN,CANmB,CAArB;AFFwB,AHoBtB,AEhBA,AJIE,AFEA,AQFA,MJYE,CAAC,GFZEwC,EEYGqE,MFZR,EEYF,CFZkB,CEYE,EEhBP3H,CJIX,CIJF,CLKQc,CKLSb,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAAwC,GLKP;AGY/B,ACNE,AIJN,ARFmC,AKLO,AJKtC,AFEA,AQFA,QJYI+G,AEjBuB1B,ELKTG,ACAbnB,AMADyJ,CREC1J,CKICuE,ACXgC,GNOtC,CIUYjB,CIZZ,CNAA,CGMagB,AJNkB,AOAlB,CJYT,CAAa,AFZD,EAAhB,EGMmBE,EJNDpD,KIML,GAAiBG,CJNC,MIMMkD,UAAP,GAAoB,CAArC,GAA0C,MAA1C,GAAmD,OAA9D,QCXgC,EAAI;ACJlB,AHqBH,ADjBjB,AEYElD,AIJN4H,APFI,AFEA,AQFE,ULNGpJ,ADMAmC,CFEAnC,EISiBL,CFXtB,CCNA,AEYSoE,CLJT,CEFY,CEWe3C,ADjBd,CAAb,AHQa,EISS,CAAS4B,ACL7B,CAAewB,AHNAtE,AFEC,CISehE,CAAF,ECL7B,CDKmC,AJTd+D,GKIE,AHNb,CGMV,ALJgB,EISwB/D,AFXd,CEWN,AJTQ,CEF9B,EKVc6D,CHqBiC,CJTZG,CISb,CGrBF,GHqBiC8C,EAAE7G,CAAF,AJTrD,GIS2D,MAAKA,CAA/C;AGrBH4D,AHqBG,ADhBjB,AEYEtB,AJPF,AKNsC,AJOtC,AMAE,KJUE,CAAJ,EAAoE,EGrBhD,AJKfwB,AEYDmE,AHNChC,EMAGQ,ELNR,ADMA,GCNY,ADMAjD,CCNZ,IDMiBwB,CMACK,CHMhB,IHNU,EMAahF,GNAG,GAAhB,EMAM,CNAgB,AMAAiD,GNAlC,GMAkB,CAAuB;ADXrB,AHsBlB0D,ADhBF,AEYC,AIJL,ARHI,ACCA,AFEA,AQHyC,ICGvC8D,MNRG/G,AFKDoB,ACCC/E,GEUI,CAAP,CFVF,EMD8CkC,CLL9C,AMQgB,APFH,CAAC,AMDkCsD,CNChD,CCNgB,CFKAvF,CELhB,EKK8C,ECG5CyK,EDHwD,EPAjCxH,EOAgB,IPAzB,CQGA,ARHgB,CQGf4K,CAAD,EAAInJ,IAAJ,EAAUkH,YAAV,EAA2B;ALSzClF,ACVyB,AIE7B,ARJkC,AKPM,AJTlB,AFoBpB,AQJyC,MCIrCN,GDJc,CRId,AQJF,GJYO,CAAP,CHZmCnE,ADI5BwB,CSAKzD,CRJyBR,EDInC,GCJiC,CDIpB,ESAMyD,ERJ0B,CDI3BS,GSAR,CAAgB,ITA9B,CCJgC,CDIA,sFMV1BxE,EADgC,EAC5BC,EAD4B,EACxBC,EADwB,EACpBC,EADoB,EAChBqF,IADgB;ACAtC,AHoBC,ADhBD,AEK2B,AIEG,ARJE,ACEjC,AFGG,AQJA,OPDc,CAAhB,GQImCzC,CDH3BoK,CCG6Bf,ATC9BxL,MAAL,ESDiC,ADHlBsG,CRID,GSDiCnE,CTC/C,CSDiDzC,GDH1BuH,ECGwB,EDHhC,CAAa,ECG+B,OAA/B;AFfV,AHyBrB,ADhBC,AEI2B,AIEG,ARH9B,AKRsC,ANarC,AQL6B,GCGhB,CAAhB,IHRY8C,EHELrH,AFGD,GKRkC,ELQ7BuC,CKKLL,CEL+B8B,CLHnC,CKGqCjB,CFRC,CHKtB,AGFdmD,IHEF,AKGmC,EFRG,CLQlC,CAAmB5D,COAyBmE,CAAlB,OPA1B,EAA8B,KAAKrG,EAAnC,EAAuC,KAAKC,EAA5C,KAAmD,KAAKkC,aAAL,CAAmBD,SAAnB,EAA8B,CAA9B,EAAiC,CAAjC,CAAvD,EAA4F,mDMVnFvB,IAFW;AACpB,AJFoB,AEcO,AIG7B,ARHI,AKToC,AEQR,MCI5BkJ,GDJe,CAAf,ICIQmB,QHCNlJ,IAbkC,CGYfvB,AHRrB2G,KGQ0BgE,AHZU,KGYf,CAAW3K,KAAKwB,MAAL,MAAiBiJ,aAAa7B,MAAb,GAAsB,CAAvC,CAAX,CAAb,CAAZ;ALWA,ADjBC,AEG4B,AII7B,ARHI,AKVoC,ANetC,MSFE3F,EHTO2D,KLMFjK,AKV+B,CGa5BiM,KRHR,CQGJ,EAAoB,ARHF,IAAd,kBKNe,GAJqB;AFwBxC,ACf6B,AIK3B,AHdsC,ANgBtC,AQNE,MJcA,EKVIgC,GLUCrO,CAAL,GAAS,AKVE,GLUX,IAAgB,EKVZqO,GLUiBrO,AEXnBgF,AJFE1E,CEaY,AKVL,GLUc,AExBW,CAKpCgK,EFmBJ,EAAkC,CFbhB,KIXsB,mFNgBzBhK,QAAb;AOfA,AHwBA,AChB2B,AIKd,ARFX,AKZoC,AJYtC,AFKD,AQNG,QDVE0E,AHwBA,AEpBUuF,IEMRoC,CJcG1M,AEzB6B,CFyBlC,CGxBO4D,EHwBE,CIdX,EDVc,AHwBhB,AIdc,CDVH,CAAX,AHwBkB,2BEpBI,EALgB;ACEtC,AHwBE,ACjByB,AIKd,ARDXsB,AKboC,AJatC,AMDIwH,UDVCI,AHwBC,AKZSlM,CLYR,AFbFoF,COCQ,GFZb,ALWA,CEaYqB,CIdDyE,CDVE/G,ANWD,IAAIpB,AODZ,CDVcmJ,CHwBhB,CIdiB,CJcG,CEblB/H,CCXJ,CCUI,EFZkC,CAMpCwF,ILOU,CAAmB,KAAKxK,AKbE,CLa1B,EAA2B,KAAKC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,EAAEL,QAAQ,KAAKA,MAAf,EAAzC,CAAV;AGcE,AClBuB,AIKd,ARAZ,AKdqC,AJctC,AMDG,QFPW6K,CEKZ,CCGiB3J,APAf,EOAS,CHdyB,EJc7BmF,AMDA,INCL,GAAY,CAAhB,EAAmB,ECNb3F,UAAU,YGFM,CANgB;ACItC,AHwBI,ADnBJ,AEA2B,ACTW,AJepC,AMDE,YJcIiH,CFbDnH,CMDG0N,KNCR,GAAc,GFIZvN,AQLiB+E,CJcC7B,AFbpB,IFIO,CISkBC,CEfvBsB,AECwB1E,GJcN,CAAU,AE5BM,CAOpCoK,GEOmB,CAAgBnH,CJcC,KAAKvD,AIdtB,CJcC,AIdsB,CJcxC,IE5BkC;ACKtC,AHwBI+G,ADnBJ,AED2B,AIKd,AREb,AKhBsC,AJgBrC,AFID,AQN4C,QFPxB4D,ECFf7G,CJKAC,EMIsB,CHdW,CCKtC,AHwBWwD,ADnBX,GILa,CAAb,ACSiDhF,EAAEwK,KJe/C,AIf6C,IAAW,IAAX,IAAmBxK,EAAEyB,QAAF,IAAc,GFPrD,CEOe,GFdN;ACMtC,AHwBG,ADnBH,AEF2B,AIKA,ARG3B,AKjBsC,ANqBtCzD,AQP4C,UDRvCwD,ANWD,ADIAG,CGVCJ,AKGgB,CCAW7C,ADA5B,EDRJ,AEQ2B,CRGlBjB,CENT,AFMI,CMXQ,CAAZ,CJKa,AFMA,CAAT,GENc,AMGWA,CAAF,ARGT,IENK+D,CFMA/D,CAAL,EENA,AGEdgF,CLIuBM,CDI3B,CGV8B,CGXQ,CAQpCsF,ANa6B,GGVI5G,AFMDuB,IAAP,CAAY,CAAZ,ADI3B,CCJI,CENJ,GFM6C,IKjBP,CLiBYtF,CAAL,GAAS,CAAlD,IAAuD,KAAKA,CAAL,GAASqF,OAAOC,IAAP,CAAY,CAAZ,CAApE,EAAoF;AMVpF,AHwBC,ACtB0B,AIKA,ARIzB,AKlBoC,AJkBtC,AMHI,KJUJ,GEjBsBsF,ECDjB7G,CHwBE,CKjBgC9C,CRIhCd,CQJoB,AHdW,AEe5B2N,IDRV,CNWE,EMXc,CNWA,CMXhB,AEOoC9N,CAAT,ADCP6N,EPGlB,OOH2BzG,IAAT,CAAc,iBFPH,GARO;ACQtC,AHwBEN,ADnBF,AEJ2B,AIKA,ARK1B,AKnBqC,ANuBtC,AQRkC,QFNnB+D,ECDVkC,GHwBI,CAAP,AEhCoC,CGcSvJ,EHD3CuB,EEEmCyC,CCDaZ,CHdd,AEeGkG,CFNvChC,EGK6C,CAAU,CFNzD,ACOuC,CAAQlF,EDPvBb,IDRc,AEeC,CDPVgI,AEM6B/L,IDCAsI,CCDK1I,ADC7B,ECDuB,EAAa,CAAb,MFNjC,IAAyB,GEM0BK,EFN3E,GEMgFJ,EAAvB,EAA8B,CAA9B,CAAV,CAApB;ALmBzBkG,ADnBF,AECD,AID4B,AHdW,ANwBtC,AQTkC,GHNpC,IIKe,CHJHgE,EHIN,AGdkC,ANwBlC7G,CQTgB,CAAhB,CJkBK,AEpBLa,CFoBF,AJTMrB,CGVCI,EGd6B,ANwB3B,CMdT8B,CHIE,GHUYjG,CGVC,CGdqB,IHchBoE,AHUd,CAAR,OGVA,EAAgC;AIJhC,AHwBC,ADnBC,AECJsB,AIFe,AROb,AKrBsC,ANyBtCnB,AQTI,KCFJ,GTWEC,CKTGqE,IFDErI,CKCC2N,ERSR,CAAW,EGVT,AECJ,EGAM,CLDY,AECE,ACHd/I,ANYYlB,CQTC,GLDf,AGfoC,CAWpCmH,ANcF,KKTmB1I,AChBmB,CDgBpB,EAAO;AELzB,AHwBD,ADnBE,AEAwB,AIDzB,AROA,AKtBsC,AN0BtChC,AQTMwN,QCFAO,AHJGpD,ECAJpI,APeDtC,GM1BkC,KCWtC,CPeA,CQTcwM,CDNE,CPeA7I,EAAEE,COflB,KEI4B,KTWZ,CQTV,CRSN,ESXMiK,ADE2B,IAA3B,CFNW,CAXqB,aGeV,CAACvB,KAAD,6DROfzM,QAAb;AM1BoB,AFoBK,AIDG,ARQ7B,AKvBuC,AEkBhCyN,aCHiCM,KAAKtB,EDG9BhJ,EFLViB,CGEmC,CDGjC,CCH6C0B,CHfb,CAYpCyE,AEMmB,CAAf,IFlBgC,CGeqBvE,MAAR,CAAelF,MAAM2M,KAAKtB,KAAL,CAAN,CAAf,CAAZ,CAAX;AFH7B,AHyBD,ADnBE,AEFyB,AIDG,AHfU,AN4BtC,AQTK,KCJL,GHHS3B,CFyBJ,EIrBD,EFhBkC,IEmB3B,2BFPM,IAZqB;AFsCtCrE,ADnBA,AMHAgG,ATaAxM,AQTMqN,UJkBA7G,AJTFzC,ESbI4J,KLsBK,EJTb,CQTcF,CJiBT,GIjBC,CCJepH,MAAb,CAAoB9E,KAAKwM,mBAAL,CAApB,CAAR,GDIqD/E,CAA/C,2DLDOjJ,QAAb;ACoBA0G,ADnBD,AEJ0B,AIC1B,AHHC,ANgBAzG,AQTK,UFPAyI,ANgBDzE,GAAJ,CIOK,AJPG,EMhBR,GAAc4F,ANgBDnK,CAAb,EAAgB,EMhBhB,CLWIO,EDKiBN,CAArB,ECLS,ADKe,KAAKgE,MAA7B,EAAqC,CAArC,EAAwCR,KAAKe,EAAL,GAAU,CAAlD;AIUAyC,ACvBA,AICF,ARQE1G,AKXA,ANgBAA,AQTG,MCJCgO,IRQA/N,AKXC6K,ANgBD5G,IMhBJ,ANgBA,GMhBY4F,EGGK,ARQjB,EQRmBxE,CRQH,AKXhB,KLWqBjG,CITH2C,CICS4L,CJDPzF,AICH,EAAa9I,CRQ9B,OQRsCqO,IJDtC,UICoDE,CAAd,CAArB,EAAuCnF,QAAQA,OAAOmF,CAAP,CAA/C,EAA0DpD,wBAA1D,EAAnB,wEJDsC;ADoB/B,ACpB+B,AIEtC,ARQExK,AKXA,ANgBA,AQTC,GJcH,GKlBMoM,CDdJ,GPsBIrI,AKXCgH,EDCIjD,CGMF,IHN6B,ACDpC,ELWA,CKXekC,KAAf,ECFMjK,iBAAyB,MEKd4J,YAAb,mCAA6B6C,KAA7B,IAAoC,EAApC,EAAwC,EAAxC,eAAgDwB,UAAhD,EAA+DvJ,IAA/D,OAAN;AFLiC,AH4BlC,AKtBC1E,ARQE,AKXA,AEOE,UFPGiL,CGGEiD,IAAT,EHHE,GAAe/D,KHKXlK,AGLJ,KHKS,qBMFOuM,WAAlB,mCAAiCC,KAAjC,IAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAElH,QAAQsI,CAAV,EAAavO,QAAQ+M,OAAOR,SAAP,EAArB,EAAyCY,OAAOJ,MAAhD,EAAwD7M,OAAO,OAA/D,EAAwEkN,kBAAkBd,YAA1F,EAAhD;ANGE,AELE,AIGL,ARQG,AKXA,ANgBA,AQTE,CCfN,SRmBQ1G,AKXCgG,EDAClD,AGOEwF,GFPR,GAAajD,CDAAxC,KCAb,AEOmB/C,CHPAiD,AJWC,MOJMjI,CHPb,GAAiBgF,IJWLpC,AOJN,CAAgBK,CPIf,CIXiBiF,CJWN,CAAX,EOJD,CAAuB,KHPZ,GAAoB,CAArC,CJWsB,EIXoB,GJWfrF,EAApB,CIXP,CJWiC,CAA1B,CIX4C,AJWhE,OIXE;AEJ6B,AH8BnCzC,ADpBI,AELE4E,AJWF,AKXA,ANgBA/E,AQV0C,OJmBvCI,GG9BewE,AJUd5D,AFMAkE,AKXCgG,ANgBDvH,IISR,ADpBYoC,CELCuB,ACAT,EFyBapB,AInBkClE,CPKnCkB,AKXCkH,CCLkB,ACWkBoC,ELDlC,CELb,CAAezE,AJWA5C,CKXjB,AEM+C,CJmBnD,CDpBwB5B,CELlB,CELgBqB,ANgBN,AOL8C,CPKnC,EENf,AELiB,CFKzB,AELE,AGM6C,EPKnBhC,ADK5B,ECLY,AOLsDZ,CDXnC,APqBA,CCLC,AOLoCyB,KPK/Bd,EAAzB,COLsD,GPKtBO,CDK5C,AQVgF,IPK/Be,AOLP,EPKE,GAAU,CAAtD;AELA,AELEjC,AIGNwI,ARQIxK,AKXA,AJaD,AFGA,AQX2C,SAAvB,CLAf4D,AELA+D,AJWAvC,AKXC+F,AEKH,ECFM,CAAZ,CNEY/H,CGLR,EHKW,AFMX,CAAY,AKXC,CAAb,GHKgB/D,CFMCI,CIXf,AJWF,EAAoB,EENZ,CAAR,EFMyBC,CAAzB,EAA4B,KAAKgE,MAAL,GAAcU,MAAO,KAAKa,eAAe,CAApB,CAAP,EAAgC,GAAhC,EAAqC,GAArC,CAA1C,EAAqF,KAAKvB,MAA1F,EAAkGwB,KAAlG,EAAyG,CAAzG,EAA4GhC,KAAKe,EAAL,GAAU,CAAtH;AMhBA,AJWAL,AELC,AIGL4G,ARQIxK,AKXA,AEKE,QLAA6D,EFMEK,AKXCkH,EGGG,ADEAoC,CCFZ,CRQI,EENA,CAAWxM,CAAX,AGLA,GAAgB,CAAhB,CEKkBuM,UAASzG,IAAT,CAAc;ADVhC,AJWA9G,AEXyB,AIS7BwK,ARQG,AKXC,AEIgC,UDV5B,AJWAvK,AGLCoL,CCNA,CESG,CAAZ,GFTcoB,CCU2BvF,CFJrC,CHKA,AKDuCsF,EFJvB,CHKA5I,EAAEE,AKDmB,CFJrC,AEI6CwB,MAAR,CDVrC,EAA4B,CJWZ,CKDwC0D,CLCxD,AKDgC;ADT9B,AFDuB,AIU7BwB,AHHI,AEGgC,SAAd,CFHbA,AEGH,ECAM,CFTDhH,AESX,IFTM,IDMF,GAAmB+G,CJYfvK,KIZJ,AJYS;AKjBR,AJWD,AEbyB,ACQzB,AJYA,AMTE,ERpCuBhB,QMiCpBsG,EEGCkI,IFHN,GAAc/C,CEGZ,CFHF,CEGe;ALGf,AEdyB,AIY7B1K,AHHI,AJYAC,AMTIwN,SCACS,CNEDtO,AGLC2L,AJYDrL,GOTR,CNEY,AMFE,GHHV,CGGcgC,CNEDtC,ADOb,AMTY8M,CLEZ,AGLe,CAAf,CJYgB,KAAKpN,IOTX,CAAkB,CPS5B,EOTU,ADAN,ECA6B,CDAF,ECArB,EAA4B,CDAlC,ECAM,EAAiC,EAAjC,EAAqC,EAAEA,QAAQ,SAAV,EAAqBgD,WAAW,IAAhC,EAAsC9C,OAAO,UAA7C,EAArC,CAAd;AFRI,AJWA,AEfyB,AIa7BQ,AHHI,AJYAC,AFCJG,AQVQqN,EPnCqBvL,KD6CtB7B,ESVE6N,CNEDrO,AGLC2L,AJYD3F,CKlBCrC,EEST,CNEYxC,AMFE,ATUd,EOnBI,CDMA,ANaasC,CSVCpB,CFTA,AJWD,AKFDuB,CFHG,CAAf,AJYA,EMTI,CDTeA,AJWD5D,ADOAsD,CCPV,CKFW,CLEE,AKFjB,CDTU,AJWN,CDOeoB,CCPC,CIXE,AEShB,ATUd,CSVgC,APSV,CAAS,CCPCtD,ADOV,CCPV,AMFE,CFTqByC,AJW/B,ADO8B,COTG,GAAvB,CPSyBiC,COTG,EFTtC,CESU,APSoB,EOTa,CPSD,COThC,EAAqC,EAAErG,APSFoE,QOTU,APSvC,CAAlB,QOT+C,EAAqBpB,WAAW,IAAhC,EAAsC9C,OAAO,UAA7C,EAArC,CAAd;ANGI,AEhByB,AIc7BQ,AHHI,AJYA,AMTG,SCAEkO,ADHH,CLKExO,AGLCK,GGGT,CNEY,AMFE,CHHV,AEGS,GCAKmC,AHHD,CHKAxC,AGLC,CHKN,AGLR,GHKiB,KAAKE,CAAL,EMFP,CNEgB,AMFE,CNE5B,EMFU,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,EAAEN,QAAQ,SAAV,EAAqBgD,WAAW,IAAhC,EAAsC9C,OAAO,UAA7C,EAArC,CAAd;AFRI,AJWA,AEjByB,AJoB7BY,AKRI,AJYA,AMTIkN,OPKDjN,GEHCV,AGLCgL,IHKG,AFGZ,CKRI,ELQanG,CKRAoG,AEGD8C,CLEC/N,CAAb,EKFI,CFHJ,QLQJ,4BOLuDsJ,CAA/C;ADRJ,AFPyB,AIgB7B,APSI,AMTG,ICADpE,MFTE,KAAKpB,CESK,GFTV,IAAa,EESfoB,GFToBnB,MESR,EFTd,EAAgC;AAC9B,AJWF,AEnByB,AIgBX,AHFd,AJYAzD,AMTC,SCDuBD,CPUpB8F,IAAJ,GAAW,COVsBoI,IAAT,CAAchL,MAAd,CAAV,APUd;AKjBElD,AJWFC,AEpByB,AIgBX,AHDd,AJYAA,AMTD,CCFH,IDzC6B,CAAX,IL6CVE,AGLCsL,AJYD1F,KIZJ,ECLK9C,CJUL,AGLa,AJYb,CCPavD,ADOA,IKlBX,AJWeE,AGLjB,CCLY,ALiBM2F,GCPG,CAArB,EAAwB5F,ADOxB,EAA0B,GCPG,EDOED,CAA/B,ECPkCG,ADOA,CCPL,GAASA,CAAd,ADOeF,CCPvC,ADOA,ECP0CC,CAA1C,EAA6CC,CAA7C;AIVY,AJWb,AErB0B,AH4BzBI,AMrDc,GAAhB,ONqDM4F,OKlBa5D,ILkBjB,GAAkB,CAAlB,KKlB8B2H,YAAlB;AAAA,AFVa,AIkB7B,AHDI,AJYD,AMVF,CA/CD,GC8CMuE,KFTA,EAEGxB,GEOO,IFTV,CAEW,IEOXwB,OAAU,CAAClN,CFPK,AEON,EAAIC,CAAJ;AFNN,AFZmB,AIkBb,AHAZ,SGAsBA,CHAjBwK,CGAmB3L,GFNdyG,EAAE8F,AEMU,GAAUrL,EAAElB,KAAtB,EHAZ,GAA0B,CAA1B,CCNU,CAAoB,MAApB,EAA0B,CAA1B,EAA6B,CAA7B,CAAJ,EAAqC;AACnCyG,AFbiB,AIkBb,AHCZ,AEEJpG,CCHA,MDGOC,GFFEsL,ICNKO,ACQd,GDRY,ACQKU,CDRC/H,QDMd,CCNQ,EDMgB,GAAxB,IEEJ;ADPW,AFRR,ACcC,EH1CuB5F,CEsBzB,OCoBO4L,KAAL,GAAaC,KAAb;ACLK,AFRP9F,AIaF,AHCI,EJ/C8B/F,EO8C5BmP,KFXA,AFFG/F,CCcAxB,CGDI,OHCT,EGDEuH,CHCc,GGDP,EHCT,EDdF,EIakB,CJbW,UAACnM,CAAD,EAAO;AFiBtC7B,AEhBI,AIaFJ,AHCE,OHEGK,CEhBCX,ECcCsH,CGDEqH,CJbCpM,EFgBZ,AEhBcqG,CIaZ,CAAc6F,CNGCjI,CEhBb,ACcA,GAAgB/C,EGDlB,EAAuBwJ,CHCAhI,GHEzB,GMHE,AHCkB,CGDa,IHCG,GAAhC,QGDoC;AFJlC,AFRF,AIaA2J,AHCA,AJSJlO,OAAOC,CGvBCV,AIaA4O,EHCC3H,EDdG3E,EAAEsG,AIaV,APUJ,COVevI,CHCX,CJSasF,EGvBb,ACccnC,KGDMF,AHCD0B,MGDR,AHCG,CGDa,IHCG,CJSlC,EITI;ACLE,AFRF,AIY2B,AHtCW,QD0BlC6D,IAAIvG,CEQDnC,AEIyBmC,CJZtBuB,KEQR,AFRF,AIYsC8K,GFJtB,AEIW,IFJzB;AACA,AEGyB,AHE5B,KGFY,CAAX,EAA4C,EAAEzJ,EFHxC,KAAK4H,KAAT,EAAgB,MEG0B,EAA5C;AFHoB5H,AFPpB2D,AIWA8F,QJXI,AIWAE,CJXChG,GIWL,CJXS,AIWAvI,GJXL,AIWJ,IFJ8B,AFPd,GAAhB,EEOmCwM,KAAf;AAAuB,AFN3C9M,AIWD,GAHD,KJRMA,IAAI,EAAR;AEOC,AFNDD,AIWFM,QJXMN,IAAI,CIWCM,EJXT,OIWkBiD,MAAT,CAAgB;AAAA,WAAK,CAAChB,EAAEnC,MAAR,IHCtB+E,WAAW+G,cAAc;ACJ5B,AFNA,AISyB,AHEzB,GGFS,CAAX,IJTQzE,IAAI,CAAV;AEOA,AFNAzH,AISFsF,AHEE,QDXIkC,CISClH,EHEAF,MGFP,AHEE,GGFgBE,AHEF,IAAd,IGFF,CJT2BN,CAArB,EAAwByH,CAAxB,CAAJ,qFEManH,QAAb;AACD,AFNCL,AISH,CAPD,OJFQuH,qBAAqBvH,CAArB,EAAwBwH,CAAxB,CAAJ;AACAqB,ACWA,QDXItB,qBAAqBsB,CAArB,EAAwBrB,CAAxB,CAAJ;AIUJ/G,AHEIyE,OGFGxE,OAAP,EHEc,CGFG+N,GHEClI,CGFlB,WHEc,CAAiB,KAAKxG,CAAtB,EAAyB,KAAKC,CAA9B,EAAiC,KAAKC,CAAtC,EAAyC,KAAKC,CAA9C,EAAiD,EAAEP,QAAQ,KAAKuM,SAAL,EAAV,EAAjD,CAAV;ADVA7G,WAAOsC,cEKHrH,EFLJ,CAAwB,EEKf,CFLT,IAA+BP,CAA/B;AEMA,AFLAsF,ACWA,WDXOsC,gBAAP,CAAwB,GAAxB,IAA+B3H,CAA/B;AEMA,AFLAqF,ACWA,UCNI/D,CFLGqG,ACWF,GCNGtB,CDMCiD,IAAI,CAAb,CCNe,CDMCA,ICNIzF,ADMAmG,CDXpB,CAAwB,GEKhB,AFLR,CEKA,GFL+BnB,CAA/B,CCWA,EAAiCS,GAAjC,EAAsC;ACLtC,AFLD,ACWG,GD5BJ,OEsBMpF,EDMEnE,ECNE2D,EDME,CCNC,IDMI3D,CCNCJ,ADMN,GAAS,GCNX,CAAR,CDMwBM,CAAL,GAAS,CAA1B;ACLFiE,AFLH,ACWK,CD7DN,OEuDMC,IDMInE,ICNN,ADMU,CCNCsB,CAAX,GDMetB,CAAL,GAAS,KAAKE,CAAL,GAAS,CAA1B;ACLFI,ADME,UCNEC,EDME4L,OCNN,GAAgBjI,CDMC,CCNCE,GDMGS,QCNL,EAAhB,IDMiB,CAAmB9E,CAAnB,EAAsBC,CAAtB,EAAyB,CAAzB,EAA4B,EAAEL,QAAQ,KAAKuM,SAAL,EAAV,EAA5B,CAAf;ACLF,AFLJ,ACWMhH,IDXA4D,MEKE7I,GFLO,CEKHoB,IDMI8K,CCNC,GFLXrD,EEKgB7I,CAAV,CDMN,CCNmB,CAAb,AFLG,CAAC8I,CEKY,IAAIzH,CAApB,AFLG,CEKX,CFLoB0H,IAAT,EAAkB;AEM7B,AFLF,ACWG,MDXCC,IEKE/I,IAAImB,AFLE0H,KEKG,EFLIC,GEKC9I,CAAV,AFLE,CAAZ,CEKuB,CAAb,EAAgB,IAAIoB,CAApB,CAAR;AACA,AFLF,MAAI4H,IEKEnJ,IAAI,CFLGoJ,IEKEpJ,CAAL,CF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","file":"src.a27f5693.map","sourceRoot":"..","sourcesContent":["class Entity {\n  constructor (_x, _y, _w, _h, { colour: _col = 'black', label: _lab = 'none' } = {}) {\n    this.x = _x\n    this.y = _y\n    this.w = _w\n    this.h = _h\n    this.colour = _col\n    this.label = _lab\n    this.remove = false\n    this.depth = 0\n  }\n\n  update (entities) {}\n\n  draw (ctx) {\n    ctx.fillStyle = this.colour\n    ctx.fillRect(this.x, this.y, this.w, this.h)\n  }\n}\n\nmodule.exports = Entity\n","const rectangleObjectsOverlap = ({x: ax, y: ay, w: aw, h: ah}, {x: bx, y: by, w: bw, h: bh}) =>\n  rectanglesOverlap(ax, ay, aw, ah, bx, by, bw, bh)\n\nconst rectanglesOverlap = (ax, ay, aw, ah, bx, by, bw, bh) =>\n  (ax <= (bx + bw) &&\n   bx <= (ax + aw) &&\n   ay <= (by + bh) &&\n   by <= (ay + ah))\n\nconst lerp = (a, b, t) =>\n  a + ((b - a) * t)\n\nconst least = f => (acc, val) => f(val) < f(acc) ? val : acc\nconst most = f => (acc, val) => f(val) > f(acc) ? val : acc\n\nmodule.exports = {\n  rectanglesOverlap,\n  rectangleObjectsOverlap,\n  lerp,\n  least,\n  most\n}\n","const Entity = require('./entity')\nconst { rectanglesOverlap } = require('./util')\n\nconst wouldCollide = (me, them, xd, yd) => {\n  let {x: ax, y: ay, w: aw, h: ah} = me\n  let {x: bx, y: by, w: bw, h: bh} = them\n  return rectanglesOverlap(ax + xd, ay + yd, aw, ah, bx, by, bw, bh)\n}\n\nconst willCollide = (entities, me, xd, yd) =>\n  entities.some(e => wouldCollide(me, e, xd, yd))\n\nclass PhysicsEntity extends Entity {\n  constructor (_x, _y, _w, _h, _opts = {}) {\n    super(_x, _y, _w, _h, _opts)\n    const {\n      gravity: _grav = 0.5,\n      kinematic: _kin = false,\n      ethereal: _ether = false,\n      dontCollide: _dc = false\n    } = _opts\n\n    this.gravity = _grav\n    this.kinematic = _kin\n    this.ethereal = _ether\n    this.dontCollide = _dc\n    this.vx = 0\n    this.vy = 0\n  }\n\n  willIntersect (entities, dx, dy) {\n    // Only collide with 'real' entities\n    let colliders = entities.filter(e => !(e.ethereal || false))\n\n    // Return result\n    return willCollide(colliders, this, dx, dy)\n  }\n\n  willIntersectWith (entity, dx, dy) {\n    return wouldCollide(this, entity, dx, dy)\n  }\n\n  update (entities) {\n    // Accelerate due to Gravity\n    if (!(this.kinematic || false)) {\n      this.vy += this.gravity\n    }\n\n    // Only collide with 'real' entities\n    let colliders = entities.filter(e => !(e.ethereal || false))\n\n    // If dont collide then just displace and be done with it\n    if (this.dontCollide) {\n      this.x += this.vx\n      this.y += this.vy\n      return\n    }\n\n    // No need to check displacement if kinematic\n    if (this.kinematic) {\n      return\n    }\n\n    // Horizontal Displacement\n    if (!willCollide(colliders, this, this.vx, 0)) {\n      this.x += this.vx\n    } else {\n      let a = 0\n      while (!willCollide(colliders, this, Math.sign(this.vx), 0) && a < 100) {\n        a++\n        this.x += Math.sign(this.vx)\n      }\n      this.vx = 0\n    }\n\n    // Vertical Displacement\n    if (!willCollide(colliders, this, 0, this.vy)) {\n      this.y += this.vy\n    } else {\n      let a = 0\n      while (!willCollide(colliders, this, 0, Math.sign(this.vy)) && a < 100) {\n        a++\n        this.y += Math.sign(this.vy)\n      }\n      this.vy = 0\n    }\n  }\n}\n\nmodule.exports = PhysicsEntity\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","const Entity = require('./entity')\nconst tc = require('tinycolor2')\n\nclass SplatterEntity extends Entity {\n  constructor (...args) {\n    super(...args)\n\n    // fade out\n    this.alpha = 1\n    this.time = -30\n    this.fadeTime = 60\n    this.depth = -0.5\n    this.radius = 15\n\n    this.ethereal = true\n  }\n\n  update (entities) {\n    // Keep track of time and calculate alpha\n    this.time++\n    this.alpha = 1 - (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      this.remove = true\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Only draw-atop existing\n    ctx.globalCompositeOperation = 'lighten'\n\n    // Manipulate colour with alpha\n    let c = tc(this.colour)\n    c.setAlpha(this.alpha)\n    ctx.fillStyle = c.toRgbString()\n\n    // Draw us\n    ctx.beginPath()\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\n    ctx.fill()\n    // ctx.drawImage(splatterImg, this.x, this.y)\n\n    // reset operation\n    ctx.globalCompositeOperation = 'source-over'\n  }\n}\n\nmodule.exports = SplatterEntity\n","const PhysicsEntity = require('./physicsEntity')\nconst SplatterEntity = require('./splatterEntity')\nconst force = 25\n\nconst clamp = (x, min, max) => Math.max(min, Math.min(x, max))\n\nclass ParticleEntity extends PhysicsEntity {\n  constructor (_x, _y, _r, opts = {}) {\n    super(_x, _y, 0, 0, opts)\n    this.radius = _r\n    this.dontCollide = true\n    this.ethereal = true\n    this.vx = (Math.random() * force) - (force / 2)\n    this.vy = -Math.abs((Math.random() * force) - (force / 2))\n    this.depth = -1.5\n  }\n\n  update (entities, { addEntity }) {\n    // Only collide with obstacle entities\n    let obstacles = entities.filter(e => e.label === 'obstacle')\n    if (this.willIntersect(obstacles, this.vx, this.vy) || this.willIntersect(obstacles, 0, 0)) {\n      // Remove me\n      this.remove = true\n\n      // Create Splat effect\n      addEntity(new SplatterEntity(this.x, this.y, 0, 0, { colour: this.colour }))\n    }\n\n    // Remove when outside of level\n    if (this.x < 0 || this.x > window.size[0] || this.y < 0 || this.y > window.size[1]) {\n      this.remove = true\n    }\n\n    // Update like normal, (basically just move)\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    ctx.fillStyle = this.colour\n    ctx.beginPath()\n    // ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\n    let squishAmount = (this.vx ** 2 + this.vy ** 2)\n    let theta = Math.atan2(this.vy, this.vx) + (Math.PI / 2)\n    ctx.ellipse(this.x, this.y, this.radius * clamp((1 / (squishAmount / 5)), 0.5, 0.9), this.radius, theta, 0, Math.PI * 2)\n    ctx.fill()\n  }\n}\n\nmodule.exports = ParticleEntity\n","const Entity = require('./entity.js')\n\nclass ScoreParticleEntity extends Entity {\n  constructor (...args) {\n    // Call Super and get opts\n    super(...args)\n    let opts = args[4]\n\n    // Get options\n    let {\n      number: _num = 1,\n      range: _rng = 50\n    } = opts\n\n    this.number = _num\n    this.range = _rng\n    this.ethereal = true\n    this.fadeTime = 15\n    this.fade = this.fadeTime + 50\n    this.ease = Math.random() * 0.4 + 0.1\n    this.depth = -4\n  }\n\n  update (entities) {\n    // Fade out\n    this.fade--\n    if (this.fade < 0) {\n      this.remove = true\n    }\n\n    /* // Find Player\n    const player = entities.find(e => e.isPlayer && e.colour === this.colour)\n    if (player) {\n      // Find Distance to player from us\n      const dist = Math.sqrt((player.x - this.x) ** 2 + (player.y - this.y) ** 2)\n\n      // If outside of range, snap to edge of range\n      if (dist > this.range) {\n        const dir = Math.atan2(this.y - player.y, this.x - player.x)\n        const x = player.x + Math.cos(dir) * this.range\n        const y = player.y + Math.sin(dir) * this.range\n        this.x = lerp(this.x, x, this.ease)\n        this.y = lerp(this.y, y, this.ease)\n      }\n    } */\n  }\n\n  draw (ctx) {\n    // Draw circle for now\n    ctx.fillStyle = this.colour\n    ctx.globalAlpha = Math.max(0, this.fade / this.fadeTime)\n    // ctx.beginPath()\n    // ctx.arc(this.x, this.y, 15, 0, Math.PI * 2)\n    // ctx.fill()\n    ctx.font = '40px \"Lato\"'\n    ctx.fillText(this.number, this.x, this.y)\n    ctx.globalAlpha = 1\n  }\n}\n\nmodule.exports = ScoreParticleEntity\n","const Entity = require('./entity')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\n\nconst interp = x => Math.max(0, (0.5 * x) + Math.pow(1.8 * x - 1, 3))\n\nclass CorpseEntity extends Entity {\n  constructor (...args) {\n    // Has the same constructor signature\n    super(...args)\n\n    // fade out\n    this.alpha = 1\n    this.time = 0\n    this.fadeTime = 20\n\n    // no physics\n    this.ethereal = true\n  }\n\n  update (entities) {\n    // Keep track of time and calculate alpha\n    this.time++\n    this.alpha = 1 - (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      this.remove = true\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Manipulate colour with alpha\n    let a = interp(this.alpha)\n    let c = tc(this.colour)\n    c.setAlpha(a)\n    ctx.fillStyle = c.toRgbString()\n\n    // Calculate pos and size for squish effect\n    let w = this.w\n    let h = lerp(this.h, 0, 1 - a)\n    let x = this.x + this.w / 2\n    let y = this.y\n\n    // Draw us\n    ctx.fillRect(x - w / 2, y + (this.h - h), w, h)\n  }\n}\n\nmodule.exports = CorpseEntity\n","const { least } = require('./util')\n\nfunction botBrain (players) {\n  const closestPlayer = players.reduce(least(p => Math.sqrt((p.x - this.x) ** 2 + (p.y - this.y) ** 2)))\n\n  let hInp = 0\n  let jInp = 0\n  let dInp = 0\n\n  // Semirandom jumping\n  if ((Math.random() < 0.05 || (this.bouncy && Math.random() < 0.3)) && (this.onGround || this.vy > 2)) {\n    jInp = 1\n  }\n\n  // Moving\n  if (Math.random() < 0.8) {\n    if (closestPlayer.y < this.y) {\n      // Above me, watch out the way\n      let dirToClosest = Math.sign(closestPlayer.x - this.x)\n      hInp = -dirToClosest\n    } else {\n      // Im above them, get them!\n      let dirToClosest = Math.sign(closestPlayer.x - this.x)\n      hInp = dirToClosest\n    }\n  }\n\n  // Ground Pound\n  if (!this.onGround) {\n    if (players.find(p => Math.abs(p.x - this.x) < 40 && p.y > this.y)) {\n      dInp = 1\n      jInp = 0\n    }\n  }\n\n  // Crap!\n  if (this.x < 130 || this.x > 810) {\n    if (this.y < 600) {\n      if (!this.isStupid) {\n        // Above lowest platform\n        let dirToCenter = Math.sign(450 - this.x)\n        hInp = dirToCenter\n      }\n    } else {\n      hInp = 0\n      jInp = 1\n    }\n  }\n\n  return {\n    hInp: hInp * 0.75,\n    jInp,\n    dInp\n  }\n}\n\nmodule.exports = botBrain\n","const orientationInputRamp = (x, s = 1) =>\n  Math.pow(0.6 * x, 6) + Math.abs(x) * Math.sign(x) * s\n\nconst setup = _ => {\n  // Keyboard\n  window.keys = {}\n  window.orientationInput = {}\n  window.touches = {}\n  window.onkeydown = (e) => {\n    if (e.repeat) {\n      window.keys[e.key] = 1\n    } else {\n      window.keys[e.key] = 2\n    }\n  }\n  window.onkeyup = (e) => {\n    window.keys[e.key] = 0\n    if (e.key === ' ') {\n      e.preventDefault()\n    }\n  }\n  window.ontouchstart = (e) => {\n    for (let touch of e.targetTouches) {\n      let side = touch.clientX < (window.innerWidth / 2) ? 'left' : 'right'\n      window.touches[side] = 2\n      e.preventDefault()\n    }\n  }\n  window.ontouchend = (e) => {\n    for (let touch of e.changedTouches) {\n      let side = touch.clientX < (window.innerWidth / 2) ? 'left' : 'right'\n      window.touches[side] = 0\n      e.preventDefault()\n    }\n  }\n  window.ondeviceorientation = (e) => {\n    let x = e.beta\n    let y = e.gamma\n    let z = e.alpha\n\n    z = (z - 180) / 180\n    y = y / 90\n    x = x / 180\n\n    const s = 2\n    x = orientationInputRamp(x, s)\n    y = orientationInputRamp(y, s)\n    z = orientationInputRamp(z, s)\n\n    window.orientationInput['x'] = x\n    window.orientationInput['y'] = y\n    window.orientationInput['z'] = z\n  }\n}\n\nconst isDown = (inputs, name) => {\n  let input = inputs[name]\n  let checks = Array.isArray(input) ? input : [input]\n  return checks.map((i) => {\n    switch (i.type) {\n      case 'keyboard':\n        let r = window.keys[i.key] || 0\n        if (r > 0) { window.keys[i.key] = 1 }\n        return r > 0\n      case 'orientation':\n        const o = window.orientationInput[i.index]\n        if (Math.sign(i.sign) === Math.sign(o)) {\n          return Math.abs(o)\n        } else {\n          return 0\n        }\n      case 'touch':\n        let t = window.touches[i.side] || 0\n        if (t > 0) { window.touches[i.side] = 1 }\n        return t > 0\n    }\n  }).find(i => i !== 0 && i !== false) || 0\n}\n\nconst isPressed = (inputs, name) => {\n  let input = inputs[name]\n  let checks = Array.isArray(input) ? input : [input]\n  return checks.map((i) => {\n    switch (i.type) {\n      case 'keyboard':\n        let r = window.keys[i.key] || 0\n        if (r > 0) { window.keys[i.key] = 1 }\n        return r === 2\n      case 'touch':\n        let t = window.touches[i.side] || 0\n        if (t > 0) { window.touches[i.side] = 1 }\n        return t === 2\n    }\n  }).find(i => i !== 0 && i !== false) || 0\n}\n\nconst inputs = [\n  {\n    left: [{\n      type: 'keyboard',\n      key: 'a'\n    }, {\n      type: 'orientation',\n      sign: -1,\n      index: 'y'\n    }],\n    right: [{\n      type: 'keyboard',\n      key: 'd'\n    }, {\n      type: 'orientation',\n      sign: 1,\n      index: 'y'\n    }],\n    jump: [{\n      type: 'keyboard',\n      key: 'w'\n    }, {\n      type: 'touch',\n      side: 'left'\n    }],\n    slam: [{\n      type: 'keyboard',\n      key: 's'\n    }, {\n      type: 'touch',\n      side: 'right'\n    }]\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'ArrowLeft'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'ArrowRight'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 'ArrowUp'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'ArrowDown'\n    }\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'j'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'l'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 'i'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'k'\n    }\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'f'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'h'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 't'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'g'\n    }\n  }\n]\n\nmodule.exports = {\n  setup,\n  inputs,\n  isDown,\n  isPressed\n}\n","const PhysicsEntity = require('./physicsEntity')\nconst ParticleEntity = require('./particleEntity')\nconst ScoreParticleEntity = require('./scoreParticleEntity')\nconst CorpseEntity = require('./corpseEntity')\nconst botBrain = require('./botBrain')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\nconst { isDown, isPressed } = require('./input')\n\nconst particleNum = 30\n\nclass PlayerEntity extends PhysicsEntity {\n  constructor (_x, _y, _w, _h, opts = {}) {\n    super(_x, _y, _w, _h, opts)\n    const {\n      inputs: _inps,\n      speed: _hspd = 2.3,\n      jumpHeight: _jmph = 14,\n      slamHeight: _slmh = 3,\n      verticalFriction: _vfric = 0.01,\n      horizontalFriction: _hfric = 0.2,\n      spawnPlayer: _spwnp,\n      number: _n,\n      kills: _klls = 0,\n      isBot: _isbt = true\n    } = opts\n    this.inputs = _inps\n    this.hSpd = _hspd\n    this.jmpHght = _jmph\n    this.slmHght = _slmh\n    this.hFric = _hfric\n    this.vFric = _vfric\n    this.jumps = 1\n    this.jumpsMax = 2\n    this.isPlayer = true\n    this.spawnPlayer = _spwnp\n    this.number = _n\n    this.stretch = 1\n    this.squeeze = 1\n    this.depth = -1\n    this.kills = _klls\n\n    // Toggling stuff\n    this.doDie = false\n\n    // Bot Stuff\n    this.timeSinceLastInput = 0\n    this.becomeBotTimeout = 450\n    this.isBot = _isbt\n    this.onGround = false\n    this.isStupid = Math.random() < 0.3\n    this.bouncy = Math.random() < 0.2\n  }\n\n  die (addEntity, delayRespawn) {\n    // Remove Player\n    this.remove = true\n\n    // Spawn Corpse\n    addEntity(new CorpseEntity(this.x, this.y, this.w, this.h, { colour: this.getColour() }))\n\n    // Spawn particles\n    for (let i = 0; i < particleNum; i++) {\n      let x = this.x + this.w / 2\n      let y = this.y + this.h / 2\n      let particle = new ParticleEntity(x, y, 9, { colour: this.getColour() })\n      addEntity(particle)\n    }\n\n    // Spawn new player\n    this.spawnPlayer(this.number, { isBot: this.isBot, kills: this.kills }, delayRespawn)\n  }\n\n  getInput (entities) {\n    const hInp = +isDown(this.inputs, 'right') - +isDown(this.inputs, 'left')\n    const jInp = isPressed(this.inputs, 'jump')\n    const dInp = isDown(this.inputs, 'slam')\n\n    if (hInp === 0 && !jInp && !dInp) {\n      this.timeSinceLastInput += 1\n      if (this.timeSinceLastInput > this.becomeBotTimeout) {\n        this.isBot = true\n        this.timeSinceLastInput = 0\n      }\n    } else {\n      this.timeSinceLastInput = 0\n      this.isBot = false\n    }\n\n    if (!this.isBot) {\n      return {\n        hInp,\n        jInp,\n        dInp\n      }\n    } else {\n      // Get players\n      const players = entities.filter(e => e.isPlayer && e !== this && !e.remove)\n\n      // Are there any?\n      if (players.length === 0) {\n        return { hInp: 0, jInp: 0, dInp: 0 }\n      }\n\n      // Use botbrain\n      return botBrain.bind(this)(players)\n    }\n  }\n\n  update (entities, { addEntity }) {\n    // Get player input\n    const {\n      hInp,\n      jInp,\n      dInp\n    } = this.getInput(entities)\n\n    // Slight Dash\n    if (Math.sign(this.vx) !== hInp && hInp === 0) {\n      this.vx += hInp * this.hSpd * 2.4\n    }\n\n    // Horizontal Movement\n    this.vx += hInp * this.hSpd\n\n    // Apply friction (damping)\n    this.vx = lerp(this.vx, 0, this.hFric)\n    this.vy = lerp(this.vy, 0, this.vFric)\n\n    // Jumping\n    if (this.jumps > 1 && jInp) {\n      if (this.vy > 0) {\n        this.vy = -this.jmpHght * 0.75\n      } else {\n        if (this.vy === 0) {\n          this.vy -= this.jmpHght\n        } else {\n          this.vy -= this.jmpHght * 0.7\n        }\n      }\n      this.jumps--\n      this.stretch = 0.7\n      this.squeeze = 1.3\n    }\n\n    // Reset stretch and squeeze\n    this.stretch = lerp(this.stretch, 1, 0.1)\n    this.squeeze = lerp(this.squeeze, 1, 0.1)\n\n    // Slamming\n    if (dInp) {\n      this.vy += this.slmHght\n    }\n\n    // If toggled off\n    if (this.doDie) {\n      this.die(addEntity, true)\n    }\n\n    // Regain jumps & make splats\n    if (this.willIntersect(entities, 0, 1)) {\n      /*\n      // Create Splats\n      let x = this.x + this.w / 2\n      let y = this.y + this.h\n      let splatter = new SplatterEntity(x, y, 0, 0, { colour: this.colour })\n      addEntity(splatter)\n      */\n\n      // Squishing and stuff\n      if (dInp) {\n        this.stretch = lerp(this.stretch, 1.3, 0.4)\n        this.squeeze = lerp(this.squeeze, 0.7, 0.4)\n      } else {\n        this.stretch = lerp(this.stretch, 1.1, 0.2)\n        this.squeeze = lerp(this.squeeze, 0.9, 0.2)\n      }\n\n      // reset jumps & gripTime\n      this.jumps = this.jumpsMax\n      this.gripTime = this.gripTimeMax\n\n      // For bot\n      this.onGround = true\n    } else {\n      this.stretch = lerp(this.stretch, 0.8, 0.2)\n      this.squeeze = lerp(this.squeeze, 1.2, 0.2)\n\n      // For bot\n      this.onGround = false\n    }\n\n    // Kill other players\n    const players = entities.filter(e => e.isPlayer && e !== this && !e.remove)\n    for (let player of players) {\n      if (this.willIntersectWith(player, 0, 1)) {\n        // Jump Effect\n        if (!dInp) {\n          this.vy = -this.jmpHght * 0.9\n          this.jumps = 2\n          this.stretch = 0.7\n          this.squeeze = 1.3\n          player.squeeze = 0.7\n          player.stretch = 1.3\n        } else {\n          // Increment kills\n          this.kills++\n\n          // Kill Player\n          if (!this.doDie /* DONT DIE TWICE */) {\n            player.die(addEntity)\n          }\n\n          // Spawn score particle\n          addEntity(new ScoreParticleEntity(this.x, this.y - 10, 0, 0, {colour: this.getColour(), number: this.kills}))\n        }\n      }\n    }\n\n    // Fall out of world\n    if (this.y - this.h > window.size[1]) {\n      this.die(addEntity)\n    }\n\n    // Loop round world\n    if ((!this.isBot && this.y < 650) || (this.isBot && this.y < 550)) {\n      if (this.x > window.size[0]) { this.x = -this.w }\n      if (this.x + this.w < 0) { this.x = window.size[0] }\n    }\n\n    // Push down\n    if (this.y < 0) {\n      this.vy += 1\n    }\n\n    // Update Physics\n    super.update(entities)\n  }\n\n  getColour () {\n    let c = tc(this.colour)\n    if (this.isBot) { c.lighten(20) }\n    return c.toRgbString()\n  }\n\n  draw (ctx) {\n    ctx.fillStyle = this.getColour()\n    let w = this.w * this.stretch\n    let h = this.h * this.squeeze\n    let x = this.x + ((1 - this.stretch) * this.w / 2)\n    let y = this.y + ((1 - this.squeeze) * this.h)\n    ctx.fillRect(x, y, w, h)\n  }\n}\n\nmodule.exports = PlayerEntity\n","const Entity = require('./entity')\nconst PlayerEntity = require('./playerEntity')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\n\nconst interp = x => Math.max(0, (0.5 * x) + Math.pow(1.8 * x - 1, 3))\n\nclass BirthEntity extends Entity {\n  constructor (...args) {\n    // Has the same constructor signature\n    super(...args)\n\n    // Get spawn object\n    let opts = args[4]\n    this.spawn = opts.spawn\n\n    // fade out\n    this.alpha = 0\n    this.time = 0\n    this.fadeTime = 80\n    this.dontProgressTime = opts.dontProgressTime || false\n\n    // no physics\n    this.ethereal = true\n  }\n\n  update (entities, { addEntity }) {\n    // Keep track of time and calculate alpha\n    if (!this.dontProgressTime) {\n      this.time++\n    }\n\n    this.alpha = (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      // Remove in the way\n      entities\n        .filter(e => e instanceof PlayerEntity)\n        .forEach(p => {\n          if (p.willIntersectWith(this, 0, 0)) {\n            p.die(addEntity)\n          }\n        })\n\n      // Remove me and create spawn\n      this.remove = true\n      if (this.spawn) { addEntity(this.spawn) }\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Manipulate colour with alpha\n    let a = interp(this.alpha)\n    let c = tc(this.colour)\n    c.setAlpha(a)\n    ctx.fillStyle = c.toRgbString()\n    let w = lerp(this.w, 0, 1 - a)\n    let h = lerp(this.h, 0, 1 - a)\n    let x = this.x + this.w / 2\n    let y = this.y + this.h / 2\n    ctx.fillRect(x - w / 2, y - h / 2, w, h)\n  }\n}\n\nmodule.exports = BirthEntity\n","const initTogglingPlayers = () => {\n  // Gets players (that are in order)\n  let players = document.querySelectorAll('.player')\n  players.forEach((el, i) => el.addEventListener('click', () => {\n    const cl = [...el.classList]\n    const enabled = cl.includes('enabled')\n\n    // Change button state\n    if (enabled) {\n      el.classList = [...cl.filter(c => c !== 'enabled'), 'disabled'].join(' ')\n    } else {\n      el.classList = [...cl.filter(c => c !== 'disabled'), 'enabled'].join(' ')\n    }\n\n    console.log(window.entities.filter(e => e.spawn != null && e.fadeTime != null))\n\n    // Kill or disable spawning\n    if (enabled) {\n      // Find player\n      const players = window.entities.filter(e => e.number != null)\n      const player = players.find(p => p.number === i)\n\n      // Check if player is alive rn\n      if (player) {\n        player.doDie = true\n      } else {\n        const spawners = window.entities.filter(e => e.spawn != null && e.fadeTime != null)\n        const spawner = spawners.find(s => s.spawn.number === i)\n        if (spawner) {\n          spawner.dontProgressTime = true\n          spawner.time = 0\n        } else {\n          console.warn(`Couldnt find spawner w/ number ${i}`)\n        }\n      }\n    } else {\n      // TODO: FIND SPAWNER AND RESUME IT, set dontProgressTime to false\n      const spawners = window.entities.filter(e => e.spawn != null && e.fadeTime != null)\n      const spawner = spawners.find(s => s.spawn.number === i)\n      if (spawner) {\n        spawner.dontProgressTime = false\n        spawner.time = 0\n      } else {\n        console.warn(`Couldnt find spawner w/ number ${i}`)\n      }\n    }\n  }))\n}\n\nmodule.exports = initTogglingPlayers\n","const PhysicsEntity = require('./physicsEntity')\nconst PlayerEntity = require('./playerEntity')\nconst BirthEntity = require('./birthEntity')\nconst initTogglingPlayers = require('./togglingPlayers')\nconst { inputs } = require('./input')\nconst { least, most } = require('./util')\nlet entities = []\nwindow.entities = [] // Kept in sync\n\nconst playerColours = ['#5468fe', '#fe4c55', '#ff9800', '#4caf50']\nconst playerSpawns = [\n  [275, 290],\n  [675, 290],\n  [300, 490],\n  [650, 490],\n  [200, 60],\n  [700, 60]\n]\n\n// Initialise toggling players\ninitTogglingPlayers()\n\nconst spawnPlayer = (n, opts, delayRespawn) => {\n  const players = entities.filter(e => e.isPlayer || e.label === 'birth')\n  let spawn = playerSpawns[Math.round(Math.random() * (playerSpawns.length - 1))]\n  if (players.length) {\n    const dist = ([ax, ay]) => ({x: bx, y: by}) => Math.sqrt((bx - ax) ** 2 + (by - ay) ** 2)\n    const distToNearestPlayer = (spawn) => dist(spawn)(players.reduce(least(dist(spawn))))\n    spawn = playerSpawns.reduce(most(distToNearestPlayer))\n  }\n  const playerOpts = { number: n, colour: playerColours[n], inputs: inputs[n], spawnPlayer }\n  const player = new PlayerEntity(...spawn, 50, 50, {...playerOpts, ...opts})\n  entities.push(new BirthEntity(...spawn, 50, 50, { number: n, colour: player.getColour(), spawn: player, label: 'birth', dontProgressTime: delayRespawn }))\n}\n\nspawnPlayer(0)\nspawnPlayer(1)\nspawnPlayer(2)\nspawnPlayer(3)\n\nentities.push(new PhysicsEntity(150, 600, 700, 60, { colour: '#313131', kinematic: true, label: 'obstacle' }))\nentities.push(new PhysicsEntity(200, 400, 200, 20, { colour: '#313131', kinematic: true, label: 'obstacle' }))\nentities.push(new PhysicsEntity(600, 400, 200, 20, { colour: '#313131', kinematic: true, label: 'obstacle' }))\n\nconst addEntity = entity => entities.push(entity)\n\nconst byDepth = (a, b) => b.depth - a.depth\n\nconst main = ctx => {\n  entities.sort(byDepth).forEach(ent => {\n    ent.update(entities.filter(e => e !== ent), { addEntity })\n    ent.draw(ctx)\n  })\n  entities = entities.filter(e => !e.remove)\n  window.entities = entities\n}\n\nmodule.exports = main\n","const create = (width, height) => {\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  window.document.body.appendChild(canvas)\n  const context = canvas.getContext('2d')\n  return context\n}\n\nmodule.exports = create\n","const size = [1000, 800]\nconst main = require('./main')\nconst context = require('./canvas')(size[0], size[1])\nrequire('./input').setup()\nlet backgroundColour = '#FFF'\n\nwindow.size = size\n\nconst loop = _ => {\n  context.fillStyle = backgroundColour\n  context.fillRect(0, 0, size[0], size[1])\n  main(context)\n  window.requestAnimationFrame(loop)\n}\n\nloop()\n"]}