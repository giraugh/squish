{"version":3,"sources":["src/entity.js","src/util.js","src/physicsEntity.js","node_modules/tinycolor2/tinycolor.js","src/splatterEntity.js","src/particleEntity.js","src/scoreParticleEntity.js","src/corpseEntity.js","src/botBrain.js","src/playerEntity.js","src/birthEntity.js","src/main.js","src/canvas.js","src/input.js","src/index.js"],"names":["Entity","_x","_y","_w","_h","colour","_col","label","_lab","x","y","w","h","remove","depth","entities","ctx","fillStyle","fillRect","module","exports","rectangleObjectsOverlap","ax","ay","aw","ah","bx","by","bw","bh","rectanglesOverlap","lerp","a","b","t","least","acc","val","f","most","require","wouldCollide","me","them","xd","yd","willCollide","some","e","PhysicsEntity","_opts","gravity","_grav","kinematic","_kin","ethereal","_ether","dontCollide","_dc","vx","vy","dx","dy","colliders","filter","entity","Math","sign","tc","SplatterEntity","args","alpha","time","fadeTime","globalCompositeOperation","c","setAlpha","toRgbString","beginPath","arc","PI","fill","force","ParticleEntity","_r","opts","radius","random","abs","addEntity","obstacles","willIntersect","window","size","ScoreParticleEntity","number","_num","range","_rng","fade","ease","globalAlpha","max","font","fillText","interp","pow","CorpseEntity","botBrain","players","closestPlayer","reduce","sqrt","p","hInp","jInp","dInp","bouncy","onGround","dirToClosest","find","isStupid","dirToCenter","particleNum","isDown","inputs","input","i","type","keys","key","isPressed","r","PlayerEntity","_inps","speed","_hspd","jumpHeight","_jmph","slamHeight","_slmh","verticalFriction","_vfric","horizontalFriction","_hfric","_spwnp","spawnPlayer","_n","kills","_klls","isBot","_isbt","hSpd","jmpHght","slmHght","hFric","vFric","jumps","jumpsMax","isPlayer","stretch","squeeze","timeSinceLastInput","becomeBotTimeout","getColour","particle","length","bind","getInput","gripTime","gripTimeMax","player","willIntersectWith","die","lighten","BirthEntity","spawn","forEach","left","right","jump","slam","playerColours","playerSpawns","n","round","dist","distToNearestPlayer","playerOpts","Object","assign","push","byDepth","main","sort","ent","update","draw","create","width","height","canvas","document","createElement","body","appendChild","context","getContext","setup","onkeydown","repeat","onkeyup","preventDefault","backgroundColour","loop","requestAnimationFrame"],"mappings":";;;ACAA,IAAMqB,0BAA0B,SAA1BA,uBAA0B;AAAA,MAAKC,EAAL,QAAEb,CAAF;AAAA,IDA1BT,ECAsCuB,EAAZ,QAASb,CAAT;ADC9B,ACD8B,MAAmBc,EAAnB,QAAgBb,CAAhB,CDCjBV,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAAoF;AGDtF,AHCsF,ACDtD,MAA0BqB,EAA1B,QAAuBb,CAAvB,kEDCkD,EAAI;AGAtF,AHAsF,ACDtD,MAAmCc,EAAnC,SAAgCjB,CAAhC,SDCCJ,MAAqD;AGCtF,AHDsF,ACDtD,MAA0CsB,EDCjCrB,ACDT,IDCsD,KCDfI,CAAvC,yBDCgB,OAAsC;AGEtF,AHFsF,ACDtD,MAAiDkB,EAAjD,SAA8CjB,CAA9C,QDCyBJ,KAA6B;AGGtF,AHHsF,ACDtD,MAAwDsB,EDCxBrB,ACDhC,IDCsD,KCDDI,CAArD,wBDCuC,MAAe;AGItF,AFLgC,SAC9BkB,kBAAkBR,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,CAD8B;AEMhC,AHLsF,AEDtF,ADAgC,CAAhC,GCAM7B,SAASwC,QAAQ,UAAR,CAAf;ACOA;AACA,AHNI,ACCJ,IAAMV,KDDGrB,CAAL,GAASR,EAAT,AED0BuC,QAAQ,CDEZ,OCFI,EDExBV,iBAAoB,CAACR,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B;AEM1B,AHNI,ACAsB,ICFlBC,KFECpB,ACCNY,CDDC,GAASpB,EAAT,ACCMwB,KAAKE,EAAZ,IACAF,MAAOJ,CCJFQ,IDION,EADZ,IAEAD,MAAOI,KAAKE,EAFZ,IAGAF,MAAOJ,KAAKE,EAJW;AEO1B,AHNI,ACDsB,CAA1B,QDCSd,CAAL,GAASR,EAAT;AGOJ,AHNI,AEFJ,IAAMsC,KFEG7B,CAAL,GAASR,EAAT,IEFiB,SAAfqC,YAAe,CAACC,EAAD,EAAKC,IAAL,EAAWC,EAAX,EAAeC,EAAf,EAAsB;ACS3C,AHNI,AEHuC,ADM3C,IAAMd,ECLIT,EADiC,CFGlCjB,EEF4BqC,ADKxB,ECN8B,CACpCjC,CFEH,AEHuC,GFGzBH,ECGZyB,EDHF,ECGS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AEIb,AHNI,AEJuC,ADM9B,MCLIX,EAD0B,CFIlChB,ACGPyB,ECNmCU,EADM,ADOpC,CDHH,AEHUhC,ADMNuB,CCPmC,EFI1BzB,CCGLwB,CAAL,EDHH,ECGaE,CADJ;AEKb,AHNI,AELuC,ADM9B,CAAb,KCLwBV,EADmB,CFKlCX,EEJ4B6B,EADM,CACtB/B,CFIjB,AELuC,GFKzB,KAAd;AGOJ,AHNI,AENuC,MACZc,EADY,CFMlCX,EEL4B4B,EADM,CFMvC,AELwB9B,CADe,EFM1B,CAAb;AGOJ,AHNG,AEPwC,ADS3C,IAAMuB,ECPIT,EAFiC,GAENiB,CDOvB,GCT6B,CAEpClC,CAFoC,IDSrC0B,KAAQ;AEKd,ADd2C,ADS7B,MCPGR,EAF0B,CDSxB,ECPkBgB,IAFM,CAE7BjC,CAF6B,EDSvB0B,GAAD,EAAMC,GAAN;AEMnB,ADf2C,ADSxB,MCPKT,EAFmB,GAENe,ADOJL,EAAED,ECTQ,CAEtB1B,ADOY,CCTU,GDSD2B,EAAEF,GAAF,CAAT,GAAkBC,GAAlB,GAAwBD,GAAtC;AEOnB,ADhB2C,ADSxB,GAAL,GCPiBP,EAFY,GAENc,IAFM,CAEf/B,CAFe;ACiB3C,AFRc,CAAd,0BDAUG,UAAU,CAAE;AGStB,ADfE,ADOF,IAAMwB,KCPGT,EDOI,SAAPS,IAAO,GCPcjB,KAAKsB,EAAvB,EAA2BrB,KAAKsB,EAAhC,EAAoCrB,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDC,EAAxD,CAAP;ACgBF,ADfC,ADMY,CCVb,QDUkB,UAACO,GAAD,EAAMC,GAAN;AEUlB,AFVkB,WAAcC,EAAED,GAAF,IAASC,EAAEF,GDCnCpB,ACDiC,CAAT,GAAkBqB,CDCrC,ECDmB,GAAwBD,GAAtC;AEWlB,AHTIpB,AENJ,ADIkB,GAAL,CCJP8B,MFME7B,QENY,CFMhB,GAAgB,KAAKZ,AENnByC,MFM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AAlB,aAAuBwG,EAAEvG,CAAF,GAAM,MAAKA,CAAlC,EAAwC,CAAxC,CAAV,CAAL;AAAA,AIH7C,ALAA,AHIE,GIDqC,CAAf,AIHlB4L,ALAAtM,AFIAmF,CGDJ,QIHa,ALAA3C,QAAQ,CKAjB8J,MAAS,ARIS,CQJRC,ELAD,CAAf,EKAe,EAAQC,MAAR,EAAmB;AAChC,ALAF,ADEE,AFCsB,IGHlBpI,EKAEqI,GLAGjK,MKAMkK,ELAE,OKAOC,KLAf,CAAX,GDEwB,IMFP,CAAuB,QAAvB,CAAf;AJIA,AIHAF,ACFF,AFAA,ALGwB,IOHlBO,AFAA/J,EHKAiE,GIHGqF,GCFK,CLKD,CAAX,AIHA,GAAeA,GDFK/J,CEAhBwK,CDEJ,ICFY,EFAgB,EEAX,eFAG,CAAtB;AHME,AIHAP,ACFA,AFAF,ANIE,ADDsB,IOHlBpE,EHKAlB,GIHGqF,IJGI,CAAX,CIHA,ALDehK,GKCCgK,CDFGhK,IJCI,CKCvB,EPEavC,CMJc,CNI3B,EAAiBC,CEHF,CFGf,EAAqBkF,EAArB,EAAoC,KMJjB,CAArB;AHME,AIHAQ,AEJF,ADEEA,AFAF,ANGsC,AILtC,AHGwB,ICDhB7D,AOFF8D,AHEAkF,AFFA9H,EDOAmE,EHFqB/B,CODlBqH,ACFAzE,ECFI,CAAC,ATKwB,CGEzB,AKLX,CLKA,EMPW,ADEG,CDEd,CAAgB2E,AEJE,ADElB,AFAkBpK,EJAZT,AEFcS,CKAT,CFIX,AEJF,CFIuBqK,GDFK,EFFE,MGI5B,CAAiCJ,MAAjC,ADFkB,CAApB,GFFsB,CAAtB,qCJKkC,EAAI;AOApC,AEJF,ADEE7G,AJFF,ALGwB,IUHlBqG,ALAA9G,EGIE2H,GCFCG,ECFIzK,KFIKiK,ECFhB,CCFmB,EDEA,AJFEjK,EGIEuK,IEJZ,CAAb,CLA+B,EIET/J,CAAD,CDEH,CAAkB,ACFR,IDEV,ARDAsB,CQChB,GRDsB,KKHD,CAAvB;ACDA,AFSE,AIHA,ALFF,AOFA,ADEI,ARCkC,AIHtC,AHCwB,AFCNA,IMJZtE,AHIAyG,AOFAqG,ALAAhH,IIEE9C,CDEC8J,CCFCI,ATAc,GMJT1K,AHIA,COFCA,CHCQA,CCGtB,ACFE,EAAc,GHJK,CHIjBiE,AOFkB,CHCQ,GFDJjE,EFEb,GGJA,ACGS,CDHxB,AIEgB,EAAoBqD,ALAA,IHClBvB,CQDuB,CAAL,CAApB,CRCQ,CQDqBuB,KAAK,CAAL,CAA7B,CAAhB,MLA4B,CAA5B;ACDA,AFSE,AIHD,ALHc,AODfrD,ADEMoD,AJFN,AHAkBtB,AFCM,CQJxB,GFCM+D,ACEElG,AFAFwE,EDOA,CAACzC,CMPC,CPCYA,CDDI,EEOZqB,CKLC0C,CNDY3B,GAAL,AODpB,ADEM,CLKC,ADNsB,AMCXtD,CHJGR,AHGD,AEDCA,CIED0F,CNDa,AIDzB/F,EHOe,AKLjB,IHJuB,AFStB,ADNgC1B,AMCZ,AJFE,CFCG,AMC1B,GLK0B,ADNYyD,KCMPmD,ADNYX,GAAL,CAAS,ECMrB,CETX,ADEA,CCFrB,ADEA,EDO+CxC,ADNYzD,CAAN,GAAU,CCMX8E,ADNR,EAAsB,CAAtB,CAAxB,CAAL,CCMgC,KAAgB,GAAzD,MAAmE,KAAK+B,QAAL,IAAiB,KAAK1D,EAAL,GAAU,CAA9F,CAAJ,EAAsG;AERxG,AFSIuD,ADPW,AOAf,ADEK,ARDiC,AIDtC,AHDwB,CCCxB,GGFM/C,AIEFiJ,AHDW9K,AFCTqE,CIAF,IHFOpE,EFSA,AKLA,CLKP,GCPaA,ECFE,GCCJD,GGCQ,ALAE,MCFd,AIEX,CJFA,KDEiB,CAAjB,4FJEUtC,EAD4B,EACxBC,EADwB,EACpB,CADoB,EACjB,CADiB,EACdmF,IADc;AGOnC,AIHHlE,ACFMyE,AJFN,ALEI,IKFExB,GGIChD,EHJIoB,IIEEyF,CDEb,GAAiBqE,ACFX,AJFa,CIEDtJ,EAAEkF,GDEpB,ACFM,IAAqB,CAArB,CJFK,CAAX;AKCAtC,ADEK,AFJL,ANGI,ACJoB,AFCA,IGElBe,AIFF5F,GGEG8E,GTCEP,CSDT,GAAcO,CJHGrD,ACCF,CNGX,CMHJ,CGEA,CTCkB4C,EAAd,EKJqB,QAAR,4HNEJd,IADW,MECXA,IAFW;AEWtB,AKLC,ARDC,ACJA,GODF,CHAMvC,MLKC0B,KIFQjB,KCHTT,CLKJ,EIFqB,CJEF,IAAnB,GIFa;ADSf,AMPF,ADEE6D,AFJF,ANGI,ADDA,IUAE0H,AHFAzF,AFAE9F,EDSFmC,GKLGiJ,CRDA5J,ADDAgB,CIOEgB,AMPE,EHFE,CACb,CPCE,CSEF,CLKI,CHNF,ADDa,CSEE,ATFf,CUAE+H,ALFEvL,CJGY,CGME,EMPT,CNOX,AHNE,EGMuB,CMPT,CDEEiB,CAAD,EAAO;AHL1B,AFWI,ADTF,AOEA8J,ADEElH,AFHAsF,ANEA,ADDA,IMJEzE,IFWEK,AGRE,EGCA7F,ATCD0C,ADDAa,CSEEyD,CRDP,CKLW,CNIX,CSEA,ARDW/D,CQCClB,CTFA,CSEEkF,ATFD,CUAf,CTCkB3C,ADDhB,CSEA,CHNEkB,AFWgB/F,AMPA2M,CNOd,EKLiB,CLKC,ADTF,AMIpB,ARDW,EKLA,GFWgB3M,AHNAwE,CGM3B,EAA8B,EHNpB,ESDZ,CTCuCA,QAAQ,CAA7C;AKLW,AFYT,ADVkB,AOGtB4H,ADEE,AFHE9E,ANEF,AIHJ,AHFI,AFIA,IKFEL,IIIE3E,APNAqC,CIDYnB,CIKVhD,ADEAgH,AFHE,ANEHtE,ADDAa,ECCL,CQCI,CHPiB6B,CLMX,ACLChC,CDKAJ,CKNK,CAAS,AIK3B,ADEgB,AJJE,ALEhB,CMLgB,AIKD,CAAjB,AHFQ,AFAV,AHFoB,CIDa,AGO7B,ARDgBsB,ACLL,AFIK,CUAE,ARJlB,CQIF,ADEqB,ATFnB,CCCW,CSDUK,ATCA3B,EKNczD,CAAP,EIKF,ATCA8E,CKNcrB,AIKnB,CAAvB,EAAgC2B,EJLea,ALMxB,GKNmB,AIKL,CJLc,AIKnB,CAAhC,ATCuCxB,KKNkBzE,ALMnC,CKN6B,ELMFyE,CKNY,CAAnB,EAAsB,CAAtB,CAAxB,CAAL,CLM4C,CAA5C,CAAX;AKNW,AFaT,AMPJ+G,ADEIjJ,AFHAkF,ANEF,ADDA,CMNJ,MIMO4E,CDECM,CFHG,CHQD7F,AHNDzG,ADDAA,IUAP,CTCE,ADDA,GCCa,ADDA,CCCC,ADDA,GSEZ,ARDF,ADDA,GIOqBoD,KAAKC,IAAL,CAAU2C,cAAcrG,CAAd,GAAkB,KAAKA,CAAjC,CAAnB;AACAyG,ADZkB,AOKtBtB,ADEG,AFNK,ANH4B,AIKtC,AHFI,GKDF,CFGIgC,KKEG2F,INOI,ACTE,CDSDhG,QCTRK,IDSA,ECTS,CAACC,CKEd,CAA6ByF,IAA7B,ALFa,EAASxF,KAAT,EAAmB;ADU7B,AMPJ,ADEE,AFHCqD,ANCD,AIFD,ALEE,CULJ,EDEE,CHHIJ,CFSF,CCLEhD,GECK,CFDDF,ALEDtE,CIOE,MCTMuE,CLEb,GAAgB,CKFV,CAAR,ELEE;AIQE,ADdkB,AMSvB,AFHKE,AFDJ,AHTsB,AFCA,CSJxB,KJYMD,EAAEC,EECI,EFDN,KAAW,GEAN,GLAH3C,IGAN,AHTsB,CAOlBU,CGEuB,KHTL,ICINzB,IAAM;ACelB,ADfYA,AOQlBgJ,AHDMpF,AFDF,AHVoB,AFWrB,QEJWlC,CKIH,CHQDuB,ADfc,CEMb,CAAC3B,AHVY,OGULqC,IAAP,CAAYF,EDSC7D,ACTCgE,GAAd,EDSkB/D,GCTI,CDST,ACTd,CDSwB2C,GCTI,CAAnC,IHHiB,CAPG,KEmByBrG,CAAd,GAAkB,KAAKA,CAAjC,CAAnB;AEdJ,AFeIyG,ADhBkB,AMWxB/F,AFNW,AFER,AHXqB,GKItB,IEWKC,MLKMmG,CKLb,GAAiByF,KAAjB,APNQ3H,GIJgB,CFelB,AFpBkB,CAQlBY,KARkB;AIKA,AFgBnB,AGRDmF,AFDH,AHZuB,CGOxB,OEMU,ALLGlF,IARW,eDYdnF,gBAAyB,ACJf,EARI;AEsBrB,ADdC,AIMEiH,ANF6B,UMEvB,ANFUvC,SAAa,CMCzB,ONDYA,SAAa;AKPX,AHDA,AIWlByC,AFDN,AHHI,IGGEC,KECK,CLJFpC,MGGS,AHHd,GAAcC,IAAd,EGGEmC,ELDIpH,OKCQ,CAAC8G,ELDC,IKCF,EAASC,KAAT,EAAmB,qGFRxBxD,IAFW;ACoBtB,ADnBE,AIQM,ANAN,AIEF,AHHE,AFEA,GOVF,GFWIyD,IAAIF,AHHD5B,KAAL,EGGa6B,CHHA5B,IGGP,AHHN,CGGF;ACVsB,AFoBtB,AGREmF,ANHA,AIEF,AHHE,AFEA,MIUE,ACTAtD,CDSC,CGRG,AFDFC,EJFAtC,ACDCnC,CFEAiB,CIUG8C,ACTN,GLDF,EKCa,CHHb,EEYF,CFZkB,CEYE,AHXFvG,GCDhB,EGGF,EAA2B,EJFAiD,MAAT,CKTFM,ALSkB,IKTZ;AAANA,AFqBd,AGRE0D,ANJ8B,AIGhC,AHHA,AFEA,QIUInB,ACTAuB,ECZgB,ACaZ,ALJH3D,CFEAF,CKCGqB,GJH6B5C,CGYzBwE,AJVZ,CCFuCjH,CCAvC,CGGe0H,ALDF,CIUT,AGTE,CHSW,AFZD,CDAqB,CIG7B,AHHR,AFEkB,CKCEF,EAAEG,CJH2B,CDE1B1D,CKCf,GLDU,EKCY,CAA9B,ALD8B,ECFE,GDEGC,QAAnC;AMXoB,AFqBH,ADjBjB,AIUEyD,ANL8B,AIIhC,AHHA,ODDgB,CAAhB,AIIIE,CECG,CJVF7D,ADMA4B,EGGG,CDQcjC,ACRtB,CHHA,CCNA,AESW,EHHC,CEWesB,ADjBd,CAAb,ECiBsB,CAASyB,CFXdxC,CEWgBhE,CAAF,GAAM,GFXzB,GEW8BA,AFXd,CEWN,CFXtB,GEW+C,EAAzB,IAA+BwG,EAAEvG,CAAF,GAAM,MAAKA,CAA/C;AAAA,ADhBjB,AIOM,ANFN,AIGakF,AHFb,AFEA,KIQI,CAAJ,EAAoE,EDhB/DpB,AFKD,ACCC4B,GGEe6B,CFRpB,ADMA,CDDStC,EELG,AEQC,AHFDzB,CCNZ,AEQyB6D,EAAEG,EHFV3C,CGEJ,IAAqB,CJH9B,AIGS,AHFD,CDDWG,ICCK,GAAhB,EDDR,CCC8B,CDDA,ECClC,GDDuC/B,EAAnC,EAAuC,KAAKC,EAA5C,KAAmD,KAAK+B,aAAL,CAAmBD,SAAnB,EAA8B,CAA9B,EAAiC,CAAjC,CAAvD,EAA4F;AKN5F,AFkBE0B,ADhBF,AIPF,ANYI,AIEmC,AHDrC,AFEA,COhBW,EAmBb,OJXO3C,ADMA3D,AFED,GIQK,CAAP,CFVF,AFES0D,GGRT,ADMa,CAAC,AFEV,CEFJ,CCNgB,EAAhB,AHQiB,KAAKC,QAAtB,EAAgC;AMdZ,AFuBlB0C,AGLF+D,ANNE,AIEF,AHnBoB,AFoBlB,QOGI,GFJC9C,EDSE,AHXFvH,ADGAA,CIQL,GCTW,CAAb,CJFE,ADGA,GCHc,ADGA,ICHd,ADGA,2HMbOyD,IAFW;AACpB,AFuBC,ADhBD,AIWE0D,AFJH,AHFA,AFGE,UOGO,UADF;AHOP,ADhBC,AIWEE,ANNA,AIEL,CAPD,QEWW,CJXF3E,QAAL,GAAgB,IAAhB;AAVoB,AImBd,ANHJkC,ADGF,GODF,eNFc,IAAIpB,cAAJ,CAAmB,KAAK5D,CAAxB,EAA2B,KAAKC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,EAAEL,QAAQ,KAAKA,MAAf,EAAzC,CAAV;AKVF,AFsBF,ADjBC,AIYC8K,ANNC,ADGD,IKDE9C,ICbEhD,CCiBG,MDjBIf,KAAK,CAAL,CAAX,uGNcavD,QAAb;AMbA,AFsBF,AGLIiH,APHH,MIQG,IEtBGgD,ACiBG,CHKDvK,CAAL,GEtBF,AFsBW,GEtBE4E,AFsBX,EGNK,EHMW,CEtBA2F,IFsBKvK,AFbjBM,CITN,AFsBkB,GAAS,GAA7B,EAAkC,CFbhB;AEchB,AGLEmH,ANNF,ACFA,QEaI,CGLG,IHKExH,CAAL,GAAS,GAAb,EAAkB;AErBlB,AFsBE,AGRK,ANHP,AIAF,AHFE,GKAF,OHaQ,AHXF,CGWG,AFbFyF,IDEI1F,ACFT,CEaYgH,AHXR,GAAS,CAAT,IGWF,AHXgB,AIAPxH,EDWW,ACXxB,EAAiBC,CJAQO,CAAL,AIApB,EAAqBN,CJAQyF,CIA7B,EAAyBxF,EAAzB,EJAoCyF,AIAI,IJAX,CAAY,CAAZ,CAAvB,IAAyC,KAAKnF,CAAL,GAAS,CAAlD,IAAuD,KAAKA,CAAL,GAASkF,OAAOC,IAAP,CAAY,CAAZ,CAApE,EAAoF;AKVpF,AFsBI,AGLJuF,ANNE,AIDoC,AHDtC,QKQM,AFPqB/F,ECVtBd,AJSD,EGCkC,CJC/B1D,EKXP,AJSSsF,GITI,CAAb,ALWE,ACFE,GDEY,ACFA,CAAhB,EAAmB,AFIfnF,CCFF,CERID,GHUG,OGVO,8CEOkB,EAAI;ACTtC,AFsBI,ADnBJ,AIcEiH,ANND,ACFC,AFIF,UMbKxD,ACiBG,EHKAkD,CFbD7G,CITP,GAAY,CAAZ,CJSE,CKOI,ELPU,IEaMqD,AFbpB,KEayBC,IAAL,CAAU,MAAM,KAAK1D,CAArB,CAAlB;AErBJ,AFsBIyG,ADnBJ,AIcEgB,AFToC,AHCrC,AFIDlH,SOIO,CDjBFyD,ANaDC,CGVCF,ICmBMkD,ADnBX,GGHA,GAAgB,EAAhB,GFsBI,QJTJ,GAA+B,SAA/B;AIUG,ADnBH,AIWM,ANHN,GMNF,QJFOnD,KAAL,GAAa,IAAK,KAAKC,IAAL,GAAY,KAAKC,QAAnC;AGFA,AFsBC,AGLD4G,ANNA,AILsC,AHGtC,AFIA,KIGA,GGCM,GHKC,iHCfDpL,CJIOc,CILyB,EAC5Bb,EAD4B,EACxBC,CJId,CILsC,EACpBC,EADoB,EAChBiF,IADgB;ACLtC,AFsBE6B,ADnBF,AIcEc,ANNH,ADEC,UMbKzE,ACiBG,APJJoB,GISK,CAAP,AJTMP,GAAG,CMbX,ECgBM,CDhBU,CNaA/D,GMbhB,GNaQ,CAAR;AM3BoB,AFqClB8G,ADnBF,AIcEe,AFboC,ALStCvD,QKNU2D,ALMR1D,COIK,CJdH,GCmBK,AClB6B,CDkBpC,CDnBOJ,CEcLa,ALJJ,CAAW,EGVP,CECkC,CAGpCwC,CLMctD,CGVC,IECqB,ALStC,CGVsBE,QAAtB,EAAgC;AGHjC,AFuBE,ADnBC,AIWI,AFXgC,ALUtCzD,UAAIC,GGVGJ,MAAL,AHUF,GGVgB,AEaZwE,ALHYV,EAAEE,EGVhB,AEAoC,CAIpC0D,KAJoC,GLUtB,EAAhB;AIUD,ADnBE,AIHH,AFEwC,CErB3B,EAqCb,KFZWC,KAJ6B,YJQlCxH,KAAK,cIJQ,GAJqB;AEiBtCkK,ANRAlK,AITsC,ALYtC,QOKM,ENRFC,SAAJ,GAAgB,KAAKZ,AIIjBgF,IAbkC,CAKpCoD,CJIF,SITsC;ADsBxC,ADnBE,AIeET,ANRFhH,AIVsC,ALatCA,QKRc0H,CDiBT,CGJG,ANRJ5D,ADGAA,GKbkC,MJUtC,ADGA,COIM,6BFZgB,EALgB;ADuBtCoC,ADnBA,AIeEgB,ANRFlH,AIXsC,ALctCA,SOKO,CHIDkG,AHZFnC,ADGAA,GCHJ,ADGA,CCHQ,ADGA,GISK,EHZAtE,ADGAA,CCHb,ADGA,CIQK,CHXW,ADGA,KMhBVM,ALaeL,AIEjB2E,ALCiB3E,CCHrB,ADGA,ECHwB,ADGA,CKdc,CAMpCiI,ALQF,EAA4B,CCHCrD,ADG7B,EAA+BpB,ICH/B,CIXsC,ALcFc,CCHC,CKbN,ALa/B,ADG+B,ECHSd,CDGC,CAAzC,GCH6Cc,EAAL,GAAU,CAAlD,gEEPajE,QAAb;AGN+B,AF0B/BoG,ADnBD,AIYO,ANLNnG,AIZsC,ALetCA,GOCF,KFVgB4H,EJMV3D,ADGAA,GKfkC,CDsBjC,AHVL,ADGA,mCKTsB,CANgB;ADyBtCmC,AGJA+D,ANRD,AIbuC,ALgBtC,SOKO,uBFRH9F,IAbkC,CAOpCwD,gBAPoC;ACFP,AFwB1B,AGAHb,AFtBoC,GDsBxC,KCfsBc,ECTFrD,ACwBV,IFtB8B,KCFP,CCuBxB,QDvBWA,SAAa,kBDSF,IAPS;AD2BzC,AGJKyC,AFvBoC,ALkBtC,SOKO,gBJhBHlH,KAAK,EEMLqE,IAbkC,CAQpC0D,kBARoC;ACDtC,AHSA,AIaO,AFrB+B,ALmBtC/H,GOHF,KFRwBgI,ELWlBtE,IKnBkC,oBLmBtC,GAA+B,aAA/B,KKX+B,GARO;ACAtC,AF6BJvD,ADpBI,AIgBAiK,AFzBsC,ALoBvC,EC3C0BnI,KGoDtB7B,CGJG,AFhBS6H,EFAXjH,CGTCwC,GF6BT,ADpBYiC,AET8B,CCAtC,EF6BaG,AChBTvB,IFJW,AETuB,CASpC6D,GDoBN,CDpBwB3E,KAAZ,CAAR,CETsC;ACCtC,AHSA,AIgBEyD,AF1BoC,AHkBvC,QGRWmB,EFANxE,AIgBI,AF1B8B,CCCjCJ,EDYDc,CFHIjB,EGTR,CHSW,AEV2B,CAUpC2B,CCTY,CCwBR,EJfU1F,EGTGmE,ADDmB,ICCxB,AHSN,CAAR,EGT0B,KAAKC,QAA/B;AHUAE,AIgBEuD,ANXN/G,AIhB0C,OJgBnCC,CELDwD,CIgBK,KNXX,EELI,CAAW5C,AFKEmD,CELb,IEEIE,IAbkC,CAWpC+D,IJKN,CIhB0C;ACGtC,AHSApI,AIaM,AFzBgC,GEgBxC,KFLWqI,EFCLpI,GEZkC,MFYtC,GAAgB0D,EAAEE,WAAF,EAAhB,OEDiB,CAXqB;ACItC,ACyBAwG,AF7BsC,ELxBbrL,MOqDnB,EDzBF,KAAKwE,IAAL,GDSAa,CCTa,EJgBbrE,CGpBkC,CAYpCsI,CCRoB7E,EJgBb,EGpB6B,ICItC,EAAgC;AAC9B,AHSF,AIgBEuD,AF9BoC,AHqBtC,QGTSuB,EEkBD,GF9B8B,OE6BhC,wBFjBW,IAZqB;ACMpCxI,AHSF,AIgBEmH,ALTFlH,AFCJG,OAAOC,EOQI,CJhBHT,ADOAM,ICPI,AHQZ,GMhBS+C,ANgBQK,EGRA1D,ADOb,CCPA,EDOgB,CIhBd,CACU,GJeSN,IFCzB,EEDI;AIfY,AHSZ,AIaM,AFfN,AHSAW,UCPIJ,AEFCiH,AHSDxB,ICPItE,EEFR,CCPiBiB,EHSJ,AEFCsF,EHSd,GCPkB1H,AEFlB,AHSkBsD,CCPV,EAAa,CAAb,CDOeoC,CIhBO+B,AHSN,EDON,CAAS,CCPCrG,ADOV,CCPV,CAAR,ADO8B,KAAKmE,CIhBvB,GJgBkB,GAAY,KAAK1B,QAA7B,CAAlB;AIhBY,AHUZ,AIDF,AFDE,AHSA,CK7CW,EAuDb,MD5BI,CHWEhE,AEFC+I,CCPAyB,GHSG,AEFR,GAAYzC,CCTV,CAEW,AHSA/H,CAAL,EEFR,CFEiB,KAAKE,CAAL,GGTC,AHSQ,CAA1B;AGRM,AHSN,AIiBAuK,AFnBA,AHSA,QKUM,EJjBFxK,AEFC+I,ICPKxC,AHSF,EGTI2D,CDOZ,EFEalK,CAAb,AEFegI,KAAf,QCPU,SAA0B,CAA1B,EAA6B,CAA7B,CAAJ,EAAqC;AACnCzB,AC0BNe,AFnBF,AHSA,UKUQ,AFnBH0B,ICPKmB,GAAF,ADOR,CCPcpF,ECyBR,AFlBSmD,KAAf,ECPQ;AACD,AHSP,AIiBEV,AFnBF,AHSAlH,SKUO,CFnBF2I,AHSDpD,IAAJ,CGTA,EHSW,CGTEyC,MAAb,MHSA;AIfK,AHSLhI,AIcM,AFhBN,AHSAA,GKMF,MD5BI,CHeEE,AEFC0I,AHSDpD,KGTJ,GFEA,AEFasC,AHSb,CCParI,ADOA,ICPIE,CEFjB,AHSkBoF,GCPG,CAArB,EAAwBrF,ADOxB,EAA0B,GCPG,EDOED,CAA/B,ECPkCG,ADOA,CCPL,GAASA,CAAd,ADOeF,CCPvC,ADOA,ECP0CC,CAA1C,EAA6CC,CAA7C;AACD,AIiBCuK,AFnBA,AHSAnK,SKUO,CFnBF6I,AHSDxD,KGTJ,GAAa,CAAb,EHSA,GAAkB,CAAlB;AIfE,AC0BA2B,AFnBF,AHSD,UKUS,AFnBH8B,QAAL,EEkBO,CFlBS,CAAhB;ACNE,AC0BA5B,AFnBF,SEmBO,CFnBF6B,GCPElJ,KDOP,CCPE,EDOc,CCPA,GDOhB,CCPE;AACA,ACuBK,AFhBP,GEWF,OFXOqI,ECPC,KAAK8B,IDOX,CCPE,EAAgB,ADOC/B,MAAnB;ACPoBxD,AC2BpB2F,AFnBA,EF7CuBpL,MIgEjB,EFnBD+F,MAAL,GAAcoD,CCRgB,CDQ9B,ICRmC6B,KAAf;AAAuB,AC4BzChD,AFnBF,EHlD8BhI,QKqEtB,AFnBHgK,OAAL,GEkBM,AFlBS,CAAf;ACRC,AHQL7I,AIoBM+G,AFnBF,OFDG9G,EIoBI,CFnBF6I,IFDT,GAAiBtD,AECb,GAAe,CAAf,QFDJ;AIkBU,AFhBN,AHMJxF,GKCE,ILDKC,GGNEN,IHMT,CGNI,EHMagF,CGNA,CAAC,CAAd,gBHMJ;AIdI,AC4BAuF,AFnBA,QEmBM,EFnBDjC,KAAL,GAAaC,KAAb;ACRA,AC4BErB,UAAM,UADF,mGD3BOjH,QAAb;AACD,AC4BGmH,AFnBF,SEmBO;AAFD,AFhBN,UAAKgC,kBAAL,GAA0B,CAA1B;AEGF,AFFE,CErDW,CAAf,QFqDSC,gBAAL,GAAwB,GAAxB;AACA,UAAKb,KAAL,GAAaC,KAAb,ECVIvI,KAAK;AACT,AC8BJ,AFpBI,IEoBEsK,MFpBGhE,QAAL,EEoBkB,CAAC,AFpBH,KAAhB,IEoBkB,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAtB;AD7BI,AC8BJ,AFpBI,IEoBEiE,MD9BEvJ,ADUCyF,ICVGhB,IDUR,CEoBiB,CACnB,CD/BiB,AC+BhB,AFrBiBvC,GEqBlB,ED/BsBK,AC+BhB,AFrBiBgB,GEqBvB,CADmB,CD9BT,CAAR,ACgCF,AFtBkB,CEsBjB,GAAD,CFtBkC,CEsB5B,EFtBJ,CEsBF,CAFmB,EAGnB,CAAC,GAAD,EAAM,GAAN,CAHmB,EAInB,CAAC,GAAD,EAAM,GAAN,CAJmB,EAKnB,CAAC,GAAD,EAAM,EAAN,CALmB,EAMnB,CAAC,GAAD,EAAM,EAAN,CANmB,CAArB;AD7BI,ADUA,UCVIZ,ADUC0C,ICVGjD,EDUR,CCVW,EDUGF,GCVE7D,EDUGkF,ICVX,CAAR,CDUc,KAAgB,GAA9B;ACTAZ,ACqCJ,AFhE0C,IEgEpC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","file":"src.0790c192.map","sourceRoot":"..","sourcesContent":["class Entity {\n  constructor (_x, _y, _w, _h, { colour: _col = 'black', label: _lab = 'none' } = {}) {\n    this.x = _x\n    this.y = _y\n    this.w = _w\n    this.h = _h\n    this.colour = _col\n    this.label = _lab\n    this.remove = false\n    this.depth = 0\n  }\n\n  update (entities) {}\n\n  draw (ctx) {\n    ctx.fillStyle = this.colour\n    ctx.fillRect(this.x, this.y, this.w, this.h)\n  }\n}\n\nmodule.exports = Entity\n","const rectangleObjectsOverlap = ({x: ax, y: ay, w: aw, h: ah}, {x: bx, y: by, w: bw, h: bh}) =>\n  rectanglesOverlap(ax, ay, aw, ah, bx, by, bw, bh)\n\nconst rectanglesOverlap = (ax, ay, aw, ah, bx, by, bw, bh) =>\n  (ax <= (bx + bw) &&\n   bx <= (ax + aw) &&\n   ay <= (by + bh) &&\n   by <= (ay + ah))\n\nconst lerp = (a, b, t) =>\n  a + ((b - a) * t)\n\nconst least = f => (acc, val) => f(val) < f(acc) ? val : acc\nconst most = f => (acc, val) => f(val) > f(acc) ? val : acc\n\nmodule.exports = {\n  rectanglesOverlap,\n  rectangleObjectsOverlap,\n  lerp,\n  least,\n  most\n}\n","const Entity = require('./entity')\nconst { rectanglesOverlap } = require('./util')\n\nconst wouldCollide = (me, them, xd, yd) => {\n  let {x: ax, y: ay, w: aw, h: ah} = me\n  let {x: bx, y: by, w: bw, h: bh} = them\n  return rectanglesOverlap(ax + xd, ay + yd, aw, ah, bx, by, bw, bh)\n}\n\nconst willCollide = (entities, me, xd, yd) =>\n  entities.some(e => wouldCollide(me, e, xd, yd))\n\nclass PhysicsEntity extends Entity {\n  constructor (_x, _y, _w, _h, _opts = {}) {\n    super(_x, _y, _w, _h, _opts)\n    const {\n      gravity: _grav = 0.5,\n      kinematic: _kin = false,\n      ethereal: _ether = false,\n      dontCollide: _dc = false\n    } = _opts\n\n    this.gravity = _grav\n    this.kinematic = _kin\n    this.ethereal = _ether\n    this.dontCollide = _dc\n    this.vx = 0\n    this.vy = 0\n  }\n\n  willIntersect (entities, dx, dy) {\n    // Only collide with 'real' entities\n    let colliders = entities.filter(e => !(e.ethereal || false))\n\n    // Return result\n    return willCollide(colliders, this, dx, dy)\n  }\n\n  willIntersectWith (entity, dx, dy) {\n    return wouldCollide(this, entity, dx, dy)\n  }\n\n  update (entities) {\n    // Accelerate due to Gravity\n    if (!(this.kinematic || false)) {\n      this.vy += this.gravity\n    }\n\n    // Only collide with 'real' entities\n    let colliders = entities.filter(e => !(e.ethereal || false))\n\n    // If dont collide then just displace and be done with it\n    if (this.dontCollide) {\n      this.x += this.vx\n      this.y += this.vy\n      return\n    }\n\n    // No need to check displacement if kinematic\n    if (this.kinematic) {\n      return\n    }\n\n    // Horizontal Displacement\n    if (!willCollide(colliders, this, this.vx, 0)) {\n      this.x += this.vx\n    } else {\n      let a = 0\n      while (!willCollide(colliders, this, Math.sign(this.vx), 0) && a < 100) {\n        a++\n        this.x += Math.sign(this.vx)\n      }\n      this.vx = 0\n    }\n\n    // Vertical Displacement\n    if (!willCollide(colliders, this, 0, this.vy)) {\n      this.y += this.vy\n    } else {\n      let a = 0\n      while (!willCollide(colliders, this, 0, Math.sign(this.vy)) && a < 100) {\n        a++\n        this.y += Math.sign(this.vy)\n      }\n      this.vy = 0\n    }\n  }\n}\n\nmodule.exports = PhysicsEntity\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","const Entity = require('./entity')\nconst tc = require('tinycolor2')\n\nclass SplatterEntity extends Entity {\n  constructor (...args) {\n    super(...args)\n\n    // fade out\n    this.alpha = 1\n    this.time = -30\n    this.fadeTime = 30\n    this.depth = -0.5\n\n    this.ethereal = true\n  }\n\n  update (entities) {\n    // Keep track of time and calculate alpha\n    this.time++\n    this.alpha = 1 - (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      this.remove = true\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Only draw-atop existing\n    ctx.globalCompositeOperation = 'lighten'\n\n    // Manipulate colour with alpha\n    let c = tc(this.colour)\n    c.setAlpha(this.alpha)\n    ctx.fillStyle = c.toRgbString()\n\n    // Draw us\n    ctx.beginPath()\n    ctx.arc(this.x, this.y, 15, 0, Math.PI * 2)\n    ctx.fill()\n    // ctx.drawImage(splatterImg, this.x, this.y)\n\n    // reset operation\n    ctx.globalCompositeOperation = 'source-over'\n  }\n}\n\nmodule.exports = SplatterEntity\n","const PhysicsEntity = require('./physicsEntity')\nconst SplatterEntity = require('./splatterEntity')\nconst force = 25\n\nclass ParticleEntity extends PhysicsEntity {\n  constructor (_x, _y, _r, opts = {}) {\n    super(_x, _y, 0, 0, opts)\n    this.radius = _r\n    this.dontCollide = true\n    this.ethereal = true\n    this.vx = (Math.random() * force) - (force / 2)\n    this.vy = -Math.abs((Math.random() * force) - (force / 2))\n    this.depth = -1.5\n  }\n\n  update (entities, { addEntity }) {\n    // Only collide with obstacle entities\n    let obstacles = entities.filter(e => e.label === 'obstacle')\n    if (this.willIntersect(obstacles, this.vx, this.vy) || this.willIntersect(obstacles, 0, 0)) {\n      // Remove me\n      this.remove = true\n\n      // Create Splat effect\n      addEntity(new SplatterEntity(this.x, this.y, 0, 0, { colour: this.colour }))\n    }\n\n    // Remove when outside of level\n    if (this.x < 0 || this.x > window.size[0] || this.y < 0 || this.y > window.size[1]) {\n      this.remove = true\n    }\n\n    // Update like normal, (basically just move)\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    ctx.fillStyle = this.colour\n    ctx.beginPath()\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2)\n    ctx.fill()\n  }\n}\n\nmodule.exports = ParticleEntity\n","const Entity = require('./entity.js')\n\nclass ScoreParticleEntity extends Entity {\n  constructor (...args) {\n    // Call Super and get opts\n    super(...args)\n    let opts = args[4]\n\n    // Get options\n    let {\n      number: _num = 1,\n      range: _rng = 50\n    } = opts\n\n    this.number = _num\n    this.range = _rng\n    this.ethereal = true\n    this.fadeTime = 15\n    this.fade = this.fadeTime + 50\n    this.ease = Math.random() * 0.4 + 0.1\n    this.depth = -4\n  }\n\n  update (entities) {\n    // Fade out\n    this.fade--\n    if (this.fade < 0) {\n      this.remove = true\n    }\n\n    /* // Find Player\n    const player = entities.find(e => e.isPlayer && e.colour === this.colour)\n    if (player) {\n      // Find Distance to player from us\n      const dist = Math.sqrt((player.x - this.x) ** 2 + (player.y - this.y) ** 2)\n\n      // If outside of range, snap to edge of range\n      if (dist > this.range) {\n        const dir = Math.atan2(this.y - player.y, this.x - player.x)\n        const x = player.x + Math.cos(dir) * this.range\n        const y = player.y + Math.sin(dir) * this.range\n        this.x = lerp(this.x, x, this.ease)\n        this.y = lerp(this.y, y, this.ease)\n      }\n    } */\n  }\n\n  draw (ctx) {\n    // Draw circle for now\n    ctx.fillStyle = this.colour\n    ctx.globalAlpha = Math.max(0, this.fade / this.fadeTime)\n    // ctx.beginPath()\n    // ctx.arc(this.x, this.y, 15, 0, Math.PI * 2)\n    // ctx.fill()\n    ctx.font = '40px \"Lato\"'\n    ctx.fillText(this.number, this.x, this.y)\n    ctx.globalAlpha = 1\n  }\n}\n\nmodule.exports = ScoreParticleEntity\n","const Entity = require('./entity')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\n\nconst interp = x => Math.max(0, (0.5 * x) + Math.pow(1.8 * x - 1, 3))\n\nclass CorpseEntity extends Entity {\n  constructor (...args) {\n    // Has the same constructor signature\n    super(...args)\n\n    // fade out\n    this.alpha = 1\n    this.time = 0\n    this.fadeTime = 20\n\n    // no physics\n    this.ethereal = true\n  }\n\n  update (entities) {\n    // Keep track of time and calculate alpha\n    this.time++\n    this.alpha = 1 - (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      this.remove = true\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Manipulate colour with alpha\n    let a = interp(this.alpha)\n    let c = tc(this.colour)\n    c.setAlpha(a)\n    ctx.fillStyle = c.toRgbString()\n\n    // Calculate pos and size for squish effect\n    let w = this.w\n    let h = lerp(this.h, 0, 1 - a)\n    let x = this.x + this.w / 2\n    let y = this.y\n\n    // Draw us\n    ctx.fillRect(x - w / 2, y + (this.h - h), w, h)\n  }\n}\n\nmodule.exports = CorpseEntity\n","const { least } = require('./util')\n\nfunction botBrain (players) {\n  const closestPlayer = players.reduce(least(p => Math.sqrt((p.x - this.x) ** 2 + (p.y - this.y) ** 2)))\n\n  let hInp = 0\n  let jInp = 0\n  let dInp = 0\n\n  // Semirandom jumping\n  if ((Math.random() < 0.05 || (this.bouncy && Math.random() < 0.3)) && (this.onGround || this.vy > 2)) {\n    jInp = 1\n  }\n\n  // Moving\n  if (Math.random() < 0.8) {\n    if (closestPlayer.y < this.y) {\n      // Above me, watch out the way\n      let dirToClosest = Math.sign(closestPlayer.x - this.x)\n      hInp = -dirToClosest\n    } else {\n      // Im above them, get them!\n      let dirToClosest = Math.sign(closestPlayer.x - this.x)\n      hInp = dirToClosest\n    }\n  }\n\n  // Ground Pound\n  if (!this.onGround) {\n    if (players.find(p => Math.abs(p.x - this.x) < 40 && p.y > this.y)) {\n      dInp = 1\n      jInp = 0\n    }\n  }\n\n  // Crap!\n  if (this.x < 130 || this.x > 810) {\n    if (this.y < 600) {\n      if (!this.isStupid) {\n        // Above lowest platform\n        let dirToCenter = Math.sign(450 - this.x)\n        hInp = dirToCenter\n      }\n    } else {\n      hInp = 0\n      jInp = 1\n    }\n  }\n\n  return {\n    hInp: hInp * 0.75,\n    jInp,\n    dInp\n  }\n}\n\nmodule.exports = botBrain\n","const PhysicsEntity = require('./physicsEntity')\nconst ParticleEntity = require('./particleEntity')\nconst ScoreParticleEntity = require('./scoreParticleEntity')\nconst CorpseEntity = require('./corpseEntity')\nconst botBrain = require('./botBrain')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\n\nconst particleNum = 30\n\nconst isDown = (inputs, input) => {\n  let i = inputs[input]\n  if (i.type === 'keyboard') {\n    return (window.keys[i.key] || 0) > 0\n  }\n}\n\nconst isPressed = (inputs, input) => {\n  let i = inputs[input]\n  if (i.type === 'keyboard') {\n    let r = window.keys[i.key] || 0\n    if (r > 0) { window.keys[i.key] = 1 }\n    return r === 2\n  }\n}\n\nclass PlayerEntity extends PhysicsEntity {\n  constructor (_x, _y, _w, _h, opts = {}) {\n    super(_x, _y, _w, _h, opts)\n    const {\n      inputs: _inps,\n      speed: _hspd = 2.3,\n      jumpHeight: _jmph = 14,\n      slamHeight: _slmh = 3,\n      verticalFriction: _vfric = 0.01,\n      horizontalFriction: _hfric = 0.2,\n      spawnPlayer: _spwnp,\n      number: _n,\n      kills: _klls = 0,\n      isBot: _isbt = true\n    } = opts\n    this.inputs = _inps\n    this.hSpd = _hspd\n    this.jmpHght = _jmph\n    this.slmHght = _slmh\n    this.hFric = _hfric\n    this.vFric = _vfric\n    this.jumps = 1\n    this.jumpsMax = 2\n    this.isPlayer = true\n    this.spawnPlayer = _spwnp\n    this.number = _n\n    this.stretch = 1\n    this.squeeze = 1\n    this.depth = -1\n    this.kills = _klls\n\n    // Bot Stuff\n    this.timeSinceLastInput = 0\n    this.becomeBotTimeout = 450\n    this.isBot = _isbt\n    this.onGround = false\n    this.isStupid = Math.random() < 0.3\n    this.bouncy = Math.random() < 0.2\n  }\n\n  die (addEntity) {\n    // Remove Player\n    this.remove = true\n\n    // Spawn Corpse\n    addEntity(new CorpseEntity(this.x, this.y, this.w, this.h, { colour: this.getColour() }))\n\n    // Spawn particles\n    for (let i = 0; i < particleNum; i++) {\n      let x = this.x + this.w / 2\n      let y = this.y + this.h / 2\n      let particle = new ParticleEntity(x, y, 7, { colour: this.getColour() })\n      addEntity(particle)\n    }\n\n    // Spawn new player\n    this.spawnPlayer(this.number, { isBot: this.isBot, kills: this.kills })\n  }\n\n  getInput (entities) {\n    const hInp = +isDown(this.inputs, 'right') - +isDown(this.inputs, 'left')\n    const jInp = isPressed(this.inputs, 'jump')\n    const dInp = isDown(this.inputs, 'slam')\n\n    if (hInp === 0 && !jInp && !dInp) {\n      this.timeSinceLastInput += 1\n      if (this.timeSinceLastInput > this.becomeBotTimeout) {\n        this.isBot = true\n        this.timeSinceLastInput = 0\n      }\n    } else {\n      this.timeSinceLastInput = 0\n      this.isBot = false\n    }\n\n    if (!this.isBot) {\n      return {\n        hInp,\n        jInp,\n        dInp\n      }\n    } else {\n      // Get players\n      const players = entities.filter(e => e.isPlayer && e !== this && !e.remove)\n\n      // Are there any?\n      if (players.length === 0) {\n        return { hInp: 0, jInp: 0, dInp: 0 }\n      }\n\n      // Use botbrain\n      return botBrain.bind(this)(players)\n    }\n  }\n\n  update (entities, { addEntity }) {\n    // Get player input\n    const {\n      hInp,\n      jInp,\n      dInp\n    } = this.getInput(entities)\n\n    // Slight Dash\n    if (Math.sign(this.vx) !== hInp && hInp === 0) {\n      this.vx += hInp * this.hSpd * 2.4\n    }\n\n    // Horizontal Movement\n    this.vx += hInp * this.hSpd\n\n    // Apply friction (damping)\n    this.vx = lerp(this.vx, 0, this.hFric)\n    this.vy = lerp(this.vy, 0, this.vFric)\n\n    // Jumping\n    if (this.jumps > 1 && jInp) {\n      if (this.vy > 0) {\n        this.vy = -this.jmpHght * 0.75\n      } else {\n        if (this.vy === 0) {\n          this.vy -= this.jmpHght\n        } else {\n          this.vy -= this.jmpHght * 0.7\n        }\n      }\n      this.jumps--\n      this.stretch = 0.7\n      this.squeeze = 1.3\n    }\n\n    // Reset stretch and squeeze\n    this.stretch = lerp(this.stretch, 1, 0.1)\n    this.squeeze = lerp(this.squeeze, 1, 0.1)\n\n    // Slamming\n    if (dInp) {\n      this.vy += this.slmHght\n    }\n\n    // Regain jumps & make splats\n    if (this.willIntersect(entities, 0, 1)) {\n      /*\n      // Create Splats\n      let x = this.x + this.w / 2\n      let y = this.y + this.h\n      let splatter = new SplatterEntity(x, y, 0, 0, { colour: this.colour })\n      addEntity(splatter)\n      */\n\n      // Squishing and stuff\n      if (dInp) {\n        this.stretch = lerp(this.stretch, 1.3, 0.4)\n        this.squeeze = lerp(this.squeeze, 0.7, 0.4)\n      } else {\n        this.stretch = lerp(this.stretch, 1.1, 0.2)\n        this.squeeze = lerp(this.squeeze, 0.9, 0.2)\n      }\n\n      // reset jumps & gripTime\n      this.jumps = this.jumpsMax\n      this.gripTime = this.gripTimeMax\n\n      // For bot\n      this.onGround = true\n    } else {\n      this.stretch = lerp(this.stretch, 0.8, 0.2)\n      this.squeeze = lerp(this.squeeze, 1.2, 0.2)\n\n      // For bot\n      this.onGround = false\n    }\n\n    // Kill other players\n    const players = entities.filter(e => e.isPlayer && e !== this && !e.remove)\n    for (let player of players) {\n      if (this.willIntersectWith(player, 0, 1)) {\n        // Jump Effect\n        if (!dInp) {\n          this.vy = -this.jmpHght * 0.9\n          this.jumps = 2\n          this.stretch = 0.7\n          this.squeeze = 1.3\n          player.squeeze = 0.7\n          player.stretch = 1.3\n        } else {\n          // Increment kills\n          this.kills++\n\n          // Kill Player\n          player.die(addEntity)\n\n          // Spawn score particle\n          addEntity(new ScoreParticleEntity(this.x, this.y - 10, 0, 0, {colour: this.getColour(), number: this.kills}))\n        }\n      }\n    }\n\n    // Fall out of world\n    if (this.y - this.h > window.size[1]) {\n      this.die(addEntity)\n    }\n\n    // Loop round world\n    if ((!this.isBot && this.y < 650) || (this.isBot && this.y < 550)) {\n      if (this.x > window.size[0]) { this.x = -this.w }\n      if (this.x + this.w < 0) { this.x = window.size[0] }\n    }\n\n    // Push down\n    if (this.y < 0) {\n      this.vy += 1\n    }\n\n    // Update Physics\n    super.update(entities)\n  }\n\n  getColour () {\n    let c = tc(this.colour)\n    if (this.isBot) { c.lighten(20) }\n    return c.toRgbString()\n  }\n\n  draw (ctx) {\n    ctx.fillStyle = this.getColour()\n    let w = this.w * this.stretch\n    let h = this.h * this.squeeze\n    let x = this.x + ((1 - this.stretch) * this.w / 2)\n    let y = this.y + ((1 - this.squeeze) * this.h)\n    ctx.fillRect(x, y, w, h)\n  }\n}\n\nmodule.exports = PlayerEntity\n","const Entity = require('./entity')\nconst PlayerEntity = require('./playerEntity')\nconst tc = require('tinycolor2')\nconst { lerp } = require('./util')\n\nconst interp = x => Math.max(0, (0.5 * x) + Math.pow(1.8 * x - 1, 3))\n\nclass BirthEntity extends Entity {\n  constructor (...args) {\n    // Has the same constructor signature\n    super(...args)\n\n    // Get spawn object\n    let opts = args[4]\n    this.spawn = opts.spawn\n\n    // fade out\n    this.alpha = 0\n    this.time = 0\n    this.fadeTime = 80\n\n    // no physics\n    this.ethereal = true\n  }\n\n  update (entities, { addEntity }) {\n    // Keep track of time and calculate alpha\n    this.time++\n    this.alpha = (this.time / this.fadeTime)\n\n    // die when timer up\n    if (this.time >= this.fadeTime) {\n      // Remove in the way\n      entities\n        .filter(e => e instanceof PlayerEntity)\n        .forEach(p => {\n          if (p.willIntersectWith(this, 0, 0)) {\n            p.die(addEntity)\n          }\n        })\n\n      // Remove me and create spawn\n      this.remove = true\n      if (this.spawn) { addEntity(this.spawn) }\n    }\n\n    // Call super\n    super.update(entities)\n  }\n\n  draw (ctx) {\n    // Manipulate colour with alpha\n    let a = interp(this.alpha)\n    let c = tc(this.colour)\n    c.setAlpha(a)\n    ctx.fillStyle = c.toRgbString()\n    let w = lerp(this.w, 0, 1 - a)\n    let h = lerp(this.h, 0, 1 - a)\n    let x = this.x + this.w / 2\n    let y = this.y + this.h / 2\n    ctx.fillRect(x - w / 2, y - h / 2, w, h)\n  }\n}\n\nmodule.exports = BirthEntity\n","const PhysicsEntity = require('./physicsEntity')\nconst PlayerEntity = require('./playerEntity')\nconst BirthEntity = require('./birthEntity')\nconst { least, most } = require('./util')\nlet entities = []\n\nconst inputs = [\n  {\n    left: {\n      type: 'keyboard',\n      key: 'a'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'd'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 'w'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 's'\n    }\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'ArrowLeft'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'ArrowRight'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 'ArrowUp'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'ArrowDown'\n    }\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'j'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'l'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 'i'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'k'\n    }\n  },\n  {\n    left: {\n      type: 'keyboard',\n      key: 'f'\n    },\n    right: {\n      type: 'keyboard',\n      key: 'h'\n    },\n    jump: {\n      type: 'keyboard',\n      key: 't'\n    },\n    slam: {\n      type: 'keyboard',\n      key: 'g'\n    }\n  }\n]\n\nconst playerColours = ['#5468fe', '#fe4c55', '#ff9800', '#4caf50']\nconst playerSpawns = [\n  [275, 290],\n  [675, 290],\n  [300, 490],\n  [650, 490],\n  [200, 60],\n  [700, 60]\n]\n\nconst spawnPlayer = (n, opts) => {\n  const players = entities.filter(e => e.isPlayer || e.label === 'birth')\n  let spawn = playerSpawns[Math.round(Math.random() * (playerSpawns.length - 1))]\n  if (players.length) {\n    const dist = ([ax, ay]) => ({x: bx, y: by}) => Math.sqrt((bx - ax) ** 2 + (by - ay) ** 2)\n    const distToNearestPlayer = (spawn) => dist(spawn)(players.reduce(least(dist(spawn))))\n    spawn = playerSpawns.reduce(most(distToNearestPlayer))\n  }\n  const playerOpts = { number: n, colour: playerColours[n], inputs: inputs[n], spawnPlayer }\n  const player = new PlayerEntity(...spawn, 50, 50, Object.assign(Object.assign({}, playerOpts), opts))\n  entities.push(new BirthEntity(...spawn, 50, 50, { number: n, colour: player.getColour(), spawn: player, label: 'birth' }))\n}\n\nspawnPlayer(0)\nspawnPlayer(1)\nspawnPlayer(2)\nspawnPlayer(3)\n\nentities.push(new PhysicsEntity(150, 600, 700, 60, { colour: '#313131', kinematic: true, label: 'obstacle' }))\nentities.push(new PhysicsEntity(200, 400, 200, 20, { colour: '#313131', kinematic: true, label: 'obstacle' }))\nentities.push(new PhysicsEntity(600, 400, 200, 20, { colour: '#313131', kinematic: true, label: 'obstacle' }))\n\nconst addEntity = entity => entities.push(entity)\n\nconst byDepth = (a, b) => b.depth - a.depth\n\nconst main = ctx => {\n  entities.sort(byDepth).forEach(ent => {\n    ent.update(entities.filter(e => e !== ent), { addEntity })\n    ent.draw(ctx)\n  })\n  entities = entities.filter(e => !e.remove)\n}\n\nmodule.exports = main\n","const create = (width, height) => {\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  window.document.body.appendChild(canvas)\n  const context = canvas.getContext('2d')\n  return context\n}\n\nmodule.exports = create\n","const setup = _ => {\n  // Keyboard\n  window.keys = {}\n  window.onkeydown = (e) => {\n    if (e.repeat) {\n      window.keys[e.key] = 1\n    } else {\n      window.keys[e.key] = 2\n    }\n  }\n  window.onkeyup = (e) => {\n    window.keys[e.key] = 0\n    if (e.key === ' ') {\n      e.preventDefault()\n    }\n  }\n}\n\nmodule.exports = setup\n","const size = [1000, 800]\nconst main = require('./main')\nconst context = require('./canvas')(size[0], size[1])\nrequire('./input')()\nlet backgroundColour = '#FFF'\n\nwindow.size = size\n\nconst loop = _ => {\n  context.fillStyle = backgroundColour\n  context.fillRect(0, 0, size[0], size[1])\n  main(context)\n  window.requestAnimationFrame(loop)\n}\n\nloop()\n"]}