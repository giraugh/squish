{"dependencies":[{"name":"./entity.js","loc":{"line":1,"column":23}}],"generated":{"js":"const Entity = require('./entity.js')\n\nclass ScoreParticleEntity extends Entity {\n  constructor (...args) {\n    // Call Super and get opts\n    super(...args)\n    let opts = args[4]\n\n    // Get options\n    let {\n      number: _num = 1,\n      range: _rng = 50\n    } = opts\n\n    this.number = _num\n    this.range = _rng\n    this.ethereal = true\n    this.fadeTime = 15\n    this.fade = this.fadeTime + 50\n    this.ease = Math.random() * 0.4 + 0.1\n    this.depth = -4\n  }\n\n  update (entities) {\n    // Fade out\n    this.fade--\n    if (this.fade < 0) {\n      this.remove = true\n    }\n\n    /* // Find Player\n    const player = entities.find(e => e.isPlayer && e.colour === this.colour)\n    if (player) {\n      // Find Distance to player from us\n      const dist = Math.sqrt((player.x - this.x) ** 2 + (player.y - this.y) ** 2)\n\n      // If outside of range, snap to edge of range\n      if (dist > this.range) {\n        const dir = Math.atan2(this.y - player.y, this.x - player.x)\n        const x = player.x + Math.cos(dir) * this.range\n        const y = player.y + Math.sin(dir) * this.range\n        this.x = lerp(this.x, x, this.ease)\n        this.y = lerp(this.y, y, this.ease)\n      }\n    } */\n  }\n\n  draw (ctx) {\n    // Draw circle for now\n    ctx.fillStyle = this.colour\n    ctx.globalAlpha = Math.max(0, this.fade / this.fadeTime)\n    // ctx.beginPath()\n    // ctx.arc(this.x, this.y, 15, 0, Math.PI * 2)\n    // ctx.fill()\n    ctx.font = '40px \"Lato\"'\n    ctx.fillText(this.number, this.x, this.y)\n    ctx.globalAlpha = 1\n  }\n}\n\nmodule.exports = ScoreParticleEntity\n","map":{"mappings":[{"source":"src/scoreParticleEntity.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"src/scoreParticleEntity.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}}],"sources":{"src/scoreParticleEntity.js":"const Entity = require('./entity.js')\n\nclass ScoreParticleEntity extends Entity {\n  constructor (...args) {\n    // Call Super and get opts\n    super(...args)\n    let opts = args[4]\n\n    // Get options\n    let {\n      number: _num = 1,\n      range: _rng = 50\n    } = opts\n\n    this.number = _num\n    this.range = _rng\n    this.ethereal = true\n    this.fadeTime = 15\n    this.fade = this.fadeTime + 50\n    this.ease = Math.random() * 0.4 + 0.1\n    this.depth = -4\n  }\n\n  update (entities) {\n    // Fade out\n    this.fade--\n    if (this.fade < 0) {\n      this.remove = true\n    }\n\n    /* // Find Player\n    const player = entities.find(e => e.isPlayer && e.colour === this.colour)\n    if (player) {\n      // Find Distance to player from us\n      const dist = Math.sqrt((player.x - this.x) ** 2 + (player.y - this.y) ** 2)\n\n      // If outside of range, snap to edge of range\n      if (dist > this.range) {\n        const dir = Math.atan2(this.y - player.y, this.x - player.x)\n        const x = player.x + Math.cos(dir) * this.range\n        const y = player.y + Math.sin(dir) * this.range\n        this.x = lerp(this.x, x, this.ease)\n        this.y = lerp(this.y, y, this.ease)\n      }\n    } */\n  }\n\n  draw (ctx) {\n    // Draw circle for now\n    ctx.fillStyle = this.colour\n    ctx.globalAlpha = Math.max(0, this.fade / this.fadeTime)\n    // ctx.beginPath()\n    // ctx.arc(this.x, this.y, 15, 0, Math.PI * 2)\n    // ctx.fill()\n    ctx.font = '40px \"Lato\"'\n    ctx.fillText(this.number, this.x, this.y)\n    ctx.globalAlpha = 1\n  }\n}\n\nmodule.exports = ScoreParticleEntity\n"},"lineCount":62}},"hash":"cc407ca7843420d21471d2626e798226","cacheData":{"env":{}}}